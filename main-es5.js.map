{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/info-couche/info-couche.component.ts","webpack:///src/app/components/info-couche/info-couche.component.html","webpack:///src/app/components/layers/conf/wfst-plugin.ts","webpack:///src/app/components/layers/layers.component.ts","webpack:///src/app/components/layers/layers.component.html","webpack:///src/app/components/menu-outils/menu-outils.component.ts","webpack:///src/app/components/menu-outils/menu-outils.component.html","webpack:///src/app/components/module-recherche/module-recherche.component.ts","webpack:///src/app/components/module-recherche/module-recherche.component.html","webpack:///src/app/components/recherche-selection/recherche-selection.component.ts","webpack:///src/app/components/recherche-selection/recherche-selection.component.html","webpack:///src/app/components/sous-menus-outils/sous-menu-basemap/sous-menu-basemap.component.ts","webpack:///src/app/components/sous-menus-outils/sous-menu-basemap/sous-menu-basemap.component.html","webpack:///src/app/components/sous-menus-outils/sous-menu-contours-territ/sous-menu-contours-territ.component.ts","webpack:///src/app/components/sous-menus-outils/sous-menu-contours-territ/sous-menu-contours-territ.component.html","webpack:///src/app/components/sous-menus-outils/sous-menu-mesure/sous-menu-mesure.component.ts","webpack:///src/app/components/sous-menus-outils/sous-menu-mesure/sous-menu-mesure.component.html","webpack:///src/app/conf/wfst-plugin.ts","webpack:///src/app/services/layers-service.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","mapboxAccessToken","printing","affiching","x","map","setView","street_mapbox","attribution","accessToken","addTo","att1","att2","att3","att4","plugin1","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","InfoCoucheComponent","listCouches","document","getElementById","innerHTML","forEach","elem","initPlugin","typeNS","typeName","wfstPointOptions","crs","L","CRS","EPSG4326","showExisting","geometryField","url","geoserverWFS","opacity","style","layer","color","weight","WFST","Format","GeoJSON","pointToLayer","geoJsonPoint","latlng","CircleMarker","radius","LayersComponent","layersService","appComponent","array_nom_couches","array_nom_protocol","array_espace","array_service_LayerSelected","selected","num_selectedlayers","array_espace_nom","htmlVariable","buttons","selectedLayers","data","getXml","subscribe","xmlString","stringxml","arrays","parsing_recup_XML","array_nom","recup_nom","recup_espace","name","getMap","removeLayer","i","length","splice","LayerSelected","str","espace_travail","array","split","couche","wms","geoserverURL","layers","format","transparent","version","WMSLayer","console","log","plugin","service","lyr1","addWMSLayer","layerSelected","str1","str2","push","legendTitle","layerObj","lyr2","addWFSLayer","value","array_service","j","ligne1","serviceWMS","serviceWFS","buttonWMS","disabled","label","buttonWFS","textXML","parser","trim","explicitArray","k","array_res","inlineRes","parseString","err","result","obj_gmd","nom","elmnt_array","protocol","SelectLayer","read","MenuOutilsComponent","menuDisabled","sousBoutonsOptionsCarteVisibility","sousBoutonsOutilsVisibility","sousMenuBasemapVisibility","sousMenuContoursTerritoiresVisibility","sousMenuMesureVisibility","toolTipForBasemapBouton","toolTipForContoursTerritoiresBouton","toolTipForMesureBouton","toolTipForImpressionBouton","setTooltip","fermeSousMenu","setBackgroundColor","srcElement","offsetParent","parentElement","setIconColor","impressionCarte","bool","backgroundColor","idLayer","eachLayer","options","menu","classList","add","remove","hideMenu","setTimeout","window","print","getElementsByClassName","visibility","setPrinting","afficheConteneurSousBoutonsOptionsCarte","afficheConteneurSousBoutonsOutils","ModuleRechercheComponent","layersComponent","presentN","present","array_nom_types","info","infoCard","validerDisa","boutSupprDisa","recup","nom_couche","nom_couches","nom_types","filteredOptions","myControl","valueChanges","pipe","filterValue","toLowerCase","includes","filter","option","optionsN","filteredOptionsN","myControlN","alert","setOneCorner","oneCorner","carte","on","onMove","setTwoCorner","rectMove","off","twoCorner","bounds","rect","fill","sw","getSouthWest","nw","getNorthWest","se","getSouthEast","ne","getNorthEast","areaRect","distanceTo","areaRectHa","self","recherche","dragging","enable","carteContenant","cursor","addPlug","iconeSuppr","boutValider","disable","filtre","addPlugin","reverseInfo","addPlugN","deleteSelection","RechercheSelectionComponent","infoCoucheComponent","selectionning","boutRechercheDisabled","hiddenButRecherche","listCouchesTypes","listCouchesNoms","app","buttCommencer","buttRechercherType","buttRechercherNom","choice","listePoints","listLatLng","selectionner","rechercherType","rechercherNom","setAffiching","afficheCoucheType","afficheCoucheNom","SousMenuBasemapComponent","menuOutilsComponent","quelbase","checkedBasemap","getMapboxAccessToken","light","OSM","streets_osm","World_topo_Map","World_Imagery","World_Shaded_Relief","maxZoom","World_Terrain_Base","World_Street_Map","basemaps","deleteLayer","source","changeBasemap","SousMenuContoursTerritComponent","quelcont","checkedDep","checkedReg","coucheFrontieresDepartements","setZIndex","coucheFrontieresRegions","coucheFrontieres","checked","afficheFrontieres","SousMenuMesureComponent","boutonsMenu","distDP","distTot","butt","contPoints","pointCourant","distance_km","distanceTotale","avantDernierPoint","dernierPoint","distance_m","toggle","doubleClickZoom","onClick","disableMenu","deleteMeasures","lat","lng","l","calculDistances","fillOpacity","fillColor","border","toFixed","nomWorkspace","nomCouche","couleur","Filter","Within","EPSG3857","toGml","maxFeatures","LayersServiceService","_http","cswUrl","geoserverCSW","headers","set","get","responseType","providedIn","environment","production","bootstrapModule","catch","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n//import { LayersComponent } from './components/layers/layers.component';\n\n\nconst routes: Routes = [\n\t//{ path: 'layers', component: LayersComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","// Ajouter OnInit pour effectuer des opérations à l'initialisation du composant.\nimport { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { map, tileLayer } from 'leaflet';\nimport { initPlugin } from './conf/wfst-plugin';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n// Implémenter OnInit\nexport class AppComponent implements OnInit{\n\n  //Variables de classe\n  map;\n  mapboxAccessToken = \"pk.eyJ1Ijoic3VwZXJwaWthciIsImEiOiI0MGE3NGQ2OWNkMzkyMzFlMzE4OWU5Yjk0ZmYzMGMwOCJ9.3bGFHjoSXB8yVA3KeQoOIw\";\n\n  //Va servir pour cacher les éléments sur la carte lors de l'impression:\n  printing=false;\n\n  //Sert à afficher le component info-couche pour avoir des infos sur la couche affichée\n  affiching=false;\n\n  /**\n    * Setteur de printing\n    * @param {bool} x\n   */\n  setPrinting(x){this.printing=x;}\n\n  /**\n    * Setteur de affiching\n    * @param {bool} x\n   */\n  setAffiching(x){this.affiching=x;}\n\n  /**\n    * getteur de map\n    * @return {map}\n   */\n  getMap() {return this.map;}\n\n  /**\n    * getteur de mapboxAccessToken\n    * @return {string}\n   */\n  getMapboxAccessToken(){return this.mapboxAccessToken;}\n\n\n  /**\n    * Initie la carte\n   */\n  ngOnInit() {\n\n    //On définie la carte\n    this.map= map('mymap').setView([44.65, 6.12], 5);\n\n  \t//On ajoute la basemap de départ\n    var street_mapbox= tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {\n              attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n              id: 'mapbox.streets',\n              accessToken: this.mapboxAccessToken\n  \t}).addTo(this.map);\n  }\n\n\n  /**\n    * Récupère les données du plugin et les affiche sur la carte\n    * @param {string} nomWorkspace\n    * @param {string} nomCouche\n    * @param {string} couleur\n    * @param {string} or {L.rectangle} filtre\n   */\n  addPlugin(att1,att2,att3,att4){\n\n    //on récupère la couche grâce au plugin et on l'affiche sur la carte\n    const plugin1 = initPlugin(att1,att2,att3,att4);\n    plugin1.addTo(this.map);\n  }\n\n}\n","<!-- Declaration du conteneur de la carte avec l'id \"map\" -->\n<body>\n\n  <div id=\"mymap\"></div>\n\n  <app-menu-outils  *ngIf='!printing'></app-menu-outils>\n\n  <app-layers *ngIf='!printing'></app-layers>\n\n  <app-recherche-selection *ngIf='!printing'></app-recherche-selection>\n\n  <app-module-recherche *ngIf='!printing'></app-module-recherche>\n\n  <app-info-couche [hidden]='!affiching'></app-info-couche>\n\n</body>\n","//Import des Components\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LayersComponent } from './components/layers/layers.component';\nimport { MenuOutilsComponent } from './components/menu-outils/menu-outils.component';\nimport { SousMenuBasemapComponent } from './components/sous-menus-outils/sous-menu-basemap/sous-menu-basemap.component';\nimport { SousMenuContoursTerritComponent } from './components/sous-menus-outils/sous-menu-contours-territ/sous-menu-contours-territ.component';\nimport { ModuleRechercheComponent } from './components/module-recherche/module-recherche.component';\nimport { SousMenuMesureComponent } from './components/sous-menus-outils/sous-menu-mesure/sous-menu-mesure.component';\nimport { RechercheSelectionComponent } from './components/recherche-selection/recherche-selection.component';\nimport { InfoCoucheComponent } from './components/info-couche/info-couche.component';\n\n//Import des APIs\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule }    from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TextFieldModule } from '@angular/cdk/text-field';\n\n//Imports des APIs Material\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\nimport {MatSelectModule} from '@angular/material/select';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatListModule} from '@angular/material/list';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatBadgeModule} from '@angular/material/badge';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LayersComponent,\n    MenuOutilsComponent,\n    SousMenuBasemapComponent,\n    SousMenuContoursTerritComponent,\n    ModuleRechercheComponent,\n    SousMenuMesureComponent,\n    RechercheSelectionComponent,\n    InfoCoucheComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n  \tHttpClientModule,\n    BrowserAnimationsModule,\n  \tMatSliderModule,\n  \tMatExpansionModule,\n  \tMatCardModule,\n  \tMatAutocompleteModule,\n  \tMatTabsModule,\n  \tMatInputModule,\n    MatRadioModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatTooltipModule,\n    MatIconModule,\n    TextFieldModule,\n    MatSelectModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatDividerModule,\n    MatListModule,\n    MatProgressSpinnerModule,\n    MatBadgeModule\n  ],\n  providers: [LayersComponent,InfoCoucheComponent],\n  bootstrap: [AppComponent]\n})\n\n\nexport class AppModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-info-couche',\n  templateUrl: './info-couche.component.html',\n  styleUrls: ['./info-couche.component.css']\n})\n\nexport class InfoCoucheComponent{\n\n\n  /**\n    * Affiche les infos de couches par nom\n    * @param {array} listCouches\n   */\n  afficheCoucheNom(listCouches){\n\n    //On affiche que l'on affiche les couches par nom et on vide le contenu préalable\n    document.getElementById('couche').innerHTML='nom';\n    document.getElementById('aRemplir').innerHTML='';\n\n    //Remplir la légende\n    listCouches.forEach(elem => {\n      document.getElementById('aRemplir').innerHTML+='<div style=\"background-color:' + elem[1]+ ';height:10px; width: 10px;display:inline-block;\"></div> '+elem[0]+'<br>';\n    });\n  }\n\n\n  /**\n    * Affiche les infos de couches par nom\n    * @param {array} listCouches\n   */\n  afficheCoucheType(listCouches){\n\n    //On affiche que l'on affiche les couches par nom et on vide le contenu préalable\n    document.getElementById('couche').innerHTML='type';\n    document.getElementById('aRemplir').innerHTML='';\n\n    //Remplir la légende\n    listCouches.forEach(elem => {\n      document.getElementById('aRemplir').innerHTML+='<div style=\"background-color:' + elem[1]+ ';height:10px; width: 10px;display:inline-block;\"></div> '+elem[0]+'<br>';\n    });\n  }\n\n}\n","<mat-card id=\"cardInfo\">\n\n    <mat-card-content>\n\n      <div id=\"divInfos\">\n\n        <p>Couches affichées par <span id='couche'></span> :</p>\n\n        <div id=\"aRemplir\"></div>\n        \n      </div>\n\n    </mat-card-content>\n\n  </mat-card>\n","\ndeclare const L: any;\nimport './../../../../../node_modules/leaflet-wfst/dist/leaflet-wfst.min.js';\nimport { environment } from './../../../../environments/environment';\n/**\n * Initialize the Leaflet plugin\n */\nexport function initPlugin(typeNS,typeName) {\n  const wfstPointOptions = {\n    crs: L.CRS.EPSG4326,\n    showExisting: true,\n    geometryField: 'geom',\n    url: environment.geoserverWFS,\n    typeNS: typeNS,\n    typeName: typeName,\n    //maxFeatures: 100,\n    opacity: 1,\n    style: (layer) => {\n      // you can use if statemt etc\n      return {\n        color: 'black',\n        weight: 1,\n      };\n    },\n  };\n  return new L.WFST(\n    wfstPointOptions,\n    new L.Format.GeoJSON({\n      crs: L.CRS.EPSG4326,\n      pointToLayer(geoJsonPoint, latlng) {\n        return new L.CircleMarker(latlng, {\n          radius: 10,\n        });\n      },\n    })\n  );\n}\n","import {AfterViewInit, Component, OnInit } from '@angular/core';\nimport { LayersServiceService } from './../../services/layers-service.service';\nimport {ElementRef} from '@angular/core';\nimport { ViewChild } from '@angular/core';\n\n// importer le module xml2js to transformer/parser un string xml en objet javascript \nimport * as xml2js from 'xml2js';\n\n//importer leaflet pour ajouter les couches à la carte \nimport * as L from 'leaflet';\n\n// importer initPlugin pour instancier le plugin leaflet-wfst\nimport { initPlugin } from './conf/wfst-plugin';\n\n// importer environnement pour récuperer les urls du geoserver utilisés\nimport { environment } from './../../../environments/environment';\n\n//importer app root pour récuperer la map\nimport{AppComponent} from './../../app.component'\n\n@Component({\n  selector: 'app-layers',\n  templateUrl: './layers.component.html',\n  styleUrls: ['./layers.component.css']\n})\nexport class LayersComponent implements OnInit {\n  //définir les attributs de la classe \n  public data : any;\n  public xmlString : string;\n  public  array_nom_couches: Array<string>=['A'];\n  public  array_nom_protocol : Array<string>= [];\n  public array_espace : Array<string>= [];\n  public  array_service_LayerSelected : Array<string>= [];\n  public selected = '';\n  public num_selectedlayers = 0;\n  public  array_espace_nom : Array<Object>= [];\n  public layerSelected;\n\n  // definir des attributs qui seront ajoutés aux éléments HTML\n  htmlVariable: string = \"\";\n\n  buttons=[];// bouttons pour les services de publication de chaque couche\n  //=[{disabled: ..., color: '...', label: '...', service:\"..\"}...]\n\n  selectedLayers=[]; // array qui stocke les couches séléctionnées par l'utilisateur et ajoutées à la carte leaflet \n  //=[{name: ..., legendTitle:..., layerObj: ... }...]\n\n  // récuperer les elements HTML dans le .ts\n  @ViewChild(\"layerChoisie\", {read: ElementRef}) layerChoisie: ElementRef;\n  @ViewChild(\"container\") container: ElementRef;\n  @ViewChild(\"buttonWMS\") buttonWMS: ElementRef;\n\n  // on injecte le service layersService et le composant appCompoant dasn le constructeur de la classe pour pouvoir accéder à leurs fcts.\n  constructor(private layersService: LayersServiceService, private appComponent:AppComponent) { }\n\n  ngOnInit(): void {\n    //lors de l'initiation du composant, récuperer xml du CSW sous format texte.\n    //subscribe() permet de manipuler les objets Observable (réponse de la requête)\n    this.data=this.layersService.getXml().subscribe(\n      (data) => {\n        this.xmlString= data;\n        var stringxml=this.xmlString;\n\n        // parser xml et récuperer les 2 arrays : espace:nom_couche / [nom_couche , protocol]\n        var arrays = this.parsing_recup_XML(this.xmlString);\n        var array_espace_nom =  arrays[0];\n        var array_nom_protocol= arrays[1];\n\n        // récuperer seulement le nom des couches\n        var array_nom= this.recup_nom(array_espace_nom)\n        var array_espace=this.recup_espace(array_espace_nom)\n\n        // ajouter les valeurs aux variables de la classe\n        this.array_espace_nom=array_espace_nom;\n        this.array_nom_couches=array_nom;\n        this.array_nom_protocol=array_nom_protocol;\n        this.array_espace=array_espace;\n\n      }\n    )\n  }\n  // fct à utiliser dans le composant recherche\n  // fct pour récuperer un array contenant les noms des couches publiées sur le geoserever\n  recupNomcouche(){\n    return this.array_nom_couches;\n  };\n  // fct pour récuperer un array contenant les espaces des couches publiées sur le geoserever\n  recupNomespace(){;\n    return this.array_espace;\n  }\n  // fct pour récuperer un array contenant les protocoles de publication \n  recupNomprotocol(){\n    return this.array_nom_protocol;\n  }\n\n\n  // fct pour supprimer les couches ajoutées à la carte et dans l'element HTML Légende\n  deleteLayer(layer,name){\n    //supprimer la couche de la carte\n    this.appComponent.getMap().removeLayer(layer);\n    // supprimer la couche de Légende\n    for (let i = 0; i < this.selectedLayers.length; i++ ){\n      if(this.selectedLayers[i].name== name){\n        this.selectedLayers.splice(i, 1);\n        break;\n      }\n    }\n    //modifier le nombre des couches ajoutées à la carte\n    this.num_selectedlayers= this.num_selectedlayers-1\n  }\n\n  // fct qui permet de construire la requete WMS pour une couche\n  WMSLayer(LayerSelected, array_espace_nom){\n    var i: string | number;\n    var str;\n    var espace_travail : string;\n    for (i in array_espace_nom){\n      str= array_espace_nom[i];\n      var array = str.split(\":\");\n      if(array[1]==LayerSelected){\n        espace_travail= array[0];\n      }\n    }\n    // la fct tileLayer.wms de leaflet permer d'ajouter les couches publiées en WMS  \n    var couche = L.tileLayer.wms(environment.geoserverURL+espace_travail+\"/wms?service=WMS\", {\n      layers: espace_travail+ ':' +LayerSelected,// propriété pour définir l'espace et le nom de la couche 'espace:nom'\n      format: 'image/png',// format de réponse \n      transparent: true,\n      attribution: LayerSelected,\n      version: '1.1.0', // version WMS utilisée\n    })\n\n    return couche;\n  }\n\n  //fct pour ajouter une couche WMS à la carte \n  addWMSLayer(LayerSelected, array_espace_nom){\n    var couche = this.WMSLayer(LayerSelected, array_espace_nom).addTo(this.appComponent.getMap());\n    console.log('add WMS layer')\n    return couche;\n  }\n\n  //fct pour ajouter une couche WFS à la carte\n  addWFSLayer(LayerSelected, array_espace_nom){\n    var i: string | number;\n    var str;\n    var espace_travail : string;\n    for (i in array_espace_nom){\n      str= array_espace_nom[i];\n      var array = str.split(\":\");\n      if(array[1]==LayerSelected){\n        espace_travail= array[0];\n      }\n    }\n    //initier le plugin lefalet-wfst pour la couche choisie \n    const plugin = initPlugin(espace_travail,LayerSelected);\n    plugin.addTo(this.appComponent.getMap());\n    return plugin;\n  }\n\n  // selon le choix d'utilisateur on ajoute les couche (choix de service)\n  loadLayer(service){\n    if(service==\"WMS\"){\n      //ajouter la couche\n      var lyr1 =this.addWMSLayer(this.layerSelected,this.array_espace_nom);\n      //créer des elements à ajouter à la légende pour chaque WMS couche ajoutée  \n      var str1= this.layerSelected;\n      var str2= \"WMS :\"+ this.layerSelected;\n      this.num_selectedlayers= this.num_selectedlayers+1\n      this.selectedLayers.push({name: str1, legendTitle:str2, layerObj: lyr1 });\n    }\n    if(service==\"WFS\"){\n      //ajouter la couche\n      var lyr2= this.addWFSLayer(this.layerSelected,this.array_espace_nom);\n      //créer des elements à ajouter à la légende pour chaque WFS couche ajoutée \n      var str1= this.layerSelected;\n      var str2= \"WFS :\"+ this.layerSelected;\n      this.num_selectedlayers= this.num_selectedlayers+1\n      this.selectedLayers.push({name: str1, legendTitle:str2, layerObj: lyr2 });\n    }\n  }\n  // fct pour permettre à l'utilisateur de choisir la couche qu'il veut afficher sur la carte\n  SelectLayer(value, array_nom_protocol){\n    // recreer les bouttons pour la couches sélectionée\n    this.buttons=[];\n    this.layerSelected= value;\n    var array_service=[];\n    var i,j: string | number;\n    var str;\n    // recuperer les services de publication de la couche choisie dans un array\n    for(i in array_nom_protocol){\n      str= array_nom_protocol[i][0];\n      var array = str.split(\":\");\n      console.log(array[1])\n      if(array[1]==value){\n        array_service.push(array_nom_protocol[i][1])\n      }\n\n    }\n    // ajouter les informations aux elemnts HTML\n    this.array_service_LayerSelected=array_service;\n    var ligne1=\"<br> <p>Services de publication disponibles : </p>\"\n    var serviceWMS: boolean;\n    var serviceWFS: boolean;\n    for(j in array_service){\n      if(array_service[i]=\"OGC:WMS\"){\n        serviceWMS= true;\n      }\n      if(array_service[i]=\"OGC:WFS\"){\n        serviceWFS= true;\n      }\n    }\n\n    this.htmlVariable= ligne1;\n    if(serviceWMS){\n      var buttonWMS= this.buttons.push({disabled: false, color: 'primary', label: 'Ajouter couche WMS', service:\"WMS\"});\n\n    }\n    if(serviceWFS){\n      var buttonWFS= this.buttons.push({disabled: false, color: 'primary', label: 'Ajouter couche WFS', service:\"WFS\"});\n\n    }\n\n  }\n\n  // fct pour récuperer les noms des couches publiées.\n  recup_nom(array_espace_nom : Array<string>){\n    var array_nom =[];\n    var str;\n    var i : string | number;\n    for (i in array_espace_nom){\n      str= array_espace_nom[i];\n      var array = str.split(\":\");\n      array_nom.push(array[1]);\n\n    }\n    return array_nom\n  }\n  // fct pour récuperer les espaces des couches publiées.\n  recup_espace(array_espace_nom : Array<string>){\n    var array_espace =[];\n    var str;\n    var i : string | number;\n    for (i in array_espace_nom){\n      str= array_espace_nom[i];\n      var array = str.split(\":\");\n      array_espace.push(array[0]);\n\n    }\n    return array_espace\n  }\n  // fct qui permet de parser lxm et parcourir l'objet JS pour récuperer les metadonnées des couches publiées.\n  parsing_recup_XML(textXML){\n    //définition du parser \n    var parser= new xml2js.Parser(\n      {\n        trim: true,\n        explicitArray: true\n      });\n    // définir les variables\n    var k: string | number;\n    var i: string | number;\n    let array_nom=[]\n    let array_res=[]\n    let array_nom_protocol=[]\n    let inlineRes\n    // parser xml sous format txt\n    parser.parseString(textXML, function (err, result) {\n      // récuperer les objets gmd du CSW \n      var obj_gmd=result['csw:GetRecordsResponse']['csw:SearchResults'][0]['gmd:MD_Metadata'];\n      // récuperer les (noms+espaces) de toutes les couches dans un array\n      for (k in obj_gmd){\n        var nom= obj_gmd[k]['gmd:fileIdentifier'][0]['gco:CharacterString'][0];\n        array_nom.push(nom)\n\n\n        inlineRes= obj_gmd[k]['gmd:distributionInfo'][0]['gmd:MD_Distribution'][0]['gmd:transferOptions'][0]['gmd:MD_DigitalTransferOptions'][0]['gmd:onLine'][0]['gmd:CI_OnlineResource'];\n        array_res.push(inlineRes)\n        // récuperer les protocoles des couches. \n        for(i in inlineRes){\n          var elmnt_array= inlineRes[i];\n          var protocol= elmnt_array['gmd:protocol'][0]['gco:CharacterString'][0];\n          array_nom_protocol.push([nom,protocol]);\n\n        }\n\n      }\n\n  });\n  return [array_nom, array_nom_protocol];\n  }\n\n}\n","<!-- Définir un elmnt mat-accordion de material pour catalogue  -->\n<mat-accordion multi=\"false\">\n\n    <!--  elmnt mat-expansion-panel pour choisir les couches disponibles dans catalogue  -->\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        Catalogue des couches WMS et WFS\n      </mat-expansion-panel-header>\n\n      <div class=\"Catalog\">\n      <p>Couches disponibles :</p>\n      <mat-form-field>\n          <mat-label>Choisir une couche </mat-label>\n          <mat-select #layerChoisie [(value)]=\"selected\">\n            <mat-option *ngFor=\"let layer_name of array_nom_couches\" [value]=\"layer_name\">\n              {{layer_name}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <!-- Afficher la couche selectionnée par l'utilisateur -->\n        <p>You selected: {{selected}}</p>\n        <button mat-raised-button (click)=\"SelectLayer(layerChoisie.value, array_nom_protocol)\"> Choisir cette couche  </button>\n\n        <div [innerHtml]=\"htmlVariable\"  #container></div>\n\n        <!-- Ajouter les bouttons pour choisir les services de publication  -->\n        <ng-container *ngFor=\"let button of buttons\">\n          <button mat-raised-button [disabled]=\"button.disabled\" [color]=\"button.color\" (click)=\"loadLayer(button.service)\" class='butt'>{{button.label}}</button><br> <br>\n        </ng-container>\n\n      </div>\n      \n    </mat-expansion-panel>\n\n    <!-- elmnt mat-expansion-panel pour afficher la légende des couches ajoutées -->\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          Légende\n        </mat-panel-title>\n        \n      </mat-expansion-panel-header>\n\n      <div class=\"layers\">\n      <ng-container *ngFor=\"let layer of selectedLayers\">\n        <mat-list>\n          <mat-list-item>{{layer.legendTitle}}\n            <button mat-mini-fab color=\"warn\" aria-label=\"Example icon button with a delete icon\" (click)=\"deleteLayer(layer.layerObj,layer.name)\">\n              <mat-icon>delete</mat-icon>\n            </button>\n          </mat-list-item>\n          <mat-divider color='white'></mat-divider>\n        </mat-list>\n      </ng-container> \n\n      </div>\n\n    </mat-expansion-panel>\n\n</mat-accordion>\n\n<!-- icone à droite de catalogue pour afficher le nombre de couches disponible sur la carte -->\n<div class=\"divBadge\" matTooltip=\"nombre de couches sur la carte\" matTooltipPosition='right'>\n<mat-icon matBadge={{num_selectedlayers}} matBadgeColor=\"warn\">ballot</mat-icon>\n</div>\n\n  \n  \n","import { Component, OnInit } from '@angular/core';\nimport { AppComponent } from '../../app.component';\n\nimport * as L from 'leaflet';\n\n@Component({\n  selector: 'app-menu-outils',\n  templateUrl: './menu-outils.component.html',\n  styleUrls: ['./menu-outils.component.css']\n})\nexport class MenuOutilsComponent{\n\n\n  /**\n    * Appel des components parents si on en a besoin\n   */\n  constructor(private appComponent: AppComponent) {}\n\n  //variable pour disable les boutons pendant la mesure sur la carte\n  menuDisabled=false;\n\n  //variables d'affichage des sous catégories de boutons\n  sousBoutonsOptionsCarteVisibility=false;\n  sousBoutonsOutilsVisibility=false;\n\n  //variables d'affichage des cards\n  sousMenuBasemapVisibility=false;\n  sousMenuContoursTerritoiresVisibility=false;\n  sousMenuMesureVisibility=false;\n\n  //variables des valeurs des tooltips des boutons\n  toolTipForBasemapBouton;\n  toolTipForContoursTerritoiresBouton;\n  toolTipForMesureBouton;\n  toolTipForImpressionBouton;\n\n  /////////getters pour visibilité des sous menus\n  /**\n    * Getteur de sousMenuBasemapVisibility\n    * @return {bool}\n   */\n  getSousMenuBasemapVisibility(){return this.sousMenuBasemapVisibility;}\n\n  /**\n    * Getteur de sousMenuContoursTerritoiresVisibility\n    * @return {bool}\n   */\n  getSousMenuContoursTerritoiresVisibility(){return this.sousMenuContoursTerritoiresVisibility;}\n\n  /**\n    * Getteur de sousMenuMesureVisibility\n    * @return {bool}\n   */\n  getSousMenuMesureVisibility(){return this.sousMenuMesureVisibility;}\n\n  /////////setters pour visibilité des sous menus\n  /**\n    * Setteur de sousMenuBasemapVisibility\n    * @param {bool} x\n   */\n  setSousMenuBasemapVisibility(x){this.sousMenuBasemapVisibility=x}\n\n  /**\n    * Setteur de sousMenuContoursTerritoiresVisibility\n    * @param {bool} x\n   */\n  setSousMenuContoursTerritoiresVisibility(x){this.sousMenuContoursTerritoiresVisibility=x}\n\n  /**\n    * Setteur de sousMenuMesureVisibility\n    * @param {bool} x\n   */\n  setSousMenuMesureVisibility(x){this.sousMenuMesureVisibility=x;}\n\n\n  /**\n    * Affilie à chaque variable le tooltip correspondant\n   */\n  setTooltip(){\n    this.toolTipForBasemapBouton=\"Choisir le fond de carte\";\n    this.toolTipForContoursTerritoiresBouton=\"Afficher les frontières administratives\";\n    this.toolTipForMesureBouton='Mesurer sur la carte';\n    this.toolTipForImpressionBouton='Impression de la carte';\n  }\n\n\n  /**\n    * Affiche les sous bouttons partie option carte\n    * @param {event} e\n   */\n  afficheConteneurSousBoutonsOptionsCarte(e){\n\n    //On rend visible l'elelement en rendant true la valeur de la variable correspondante\n    this.sousBoutonsOptionsCarteVisibility=!this.sousBoutonsOptionsCarteVisibility;\n\n    //On réinitialise les tooltips au cas ou était sur une autre card\n    this.setTooltip();\n\n    //On ferme tous les cards\n    this.fermeSousMenu();\n\n    //On ferme les sous-boutton sde l'autre categorie et on lui remet style par defaut\n    this.sousBoutonsOutilsVisibility=false;\n    this.setBackgroundColor('conteneur-boutons-outils',false,'');\n\n    //Si on ouvre la sous-cat on grise sinon style par défaut\n    this.setBackgroundColor(e.srcElement.offsetParent.parentElement,this.sousBoutonsOptionsCarteVisibility,'#656565');\n  }\n\n\n  /**\n    * Affiche les sous bouttons partie outils\n    * @param {event} e\n   */\n  afficheConteneurSousBoutonsOutils(e){\n\n    //On rend visible l'elelement en rendant true la valeur de la variable correspondante\n    this.sousBoutonsOutilsVisibility=!this.sousBoutonsOutilsVisibility;\n\n    //On réinitialise les tooltips au cas ou était sur une autre card\n    this.setTooltip();\n\n    //On ferme tous les cards\n    this.fermeSousMenu();\n\n    //On ferme les sous-boutton sde l'autre categorie et on lui remet style par defaut\n    this.setBackgroundColor('conteneur-boutons-options-carte',false,'');\n    this.sousBoutonsOptionsCarteVisibility=false;\n\n    //Si on ouvre la sous-cat on grise sinon style par défaut\n    this.setBackgroundColor(e.srcElement.offsetParent.parentElement,this.sousBoutonsOutilsVisibility,'#656565');\n  }\n\n\n  /**\n    * Affiche les sous-menus\n    * @param {event} e\n   */\n  afficheSousMenu(e){\n    if (e.srcElement.id===\"petite-icone-basemap\") {\n\n      //la variable de visibilité passe à true\n      this.sousMenuBasemapVisibility=!this.sousMenuBasemapVisibility;\n\n      //On réinitialise les tooltips au cas ou était sur une autre card\n      this.setTooltip();\n\n      //On rend vert l'icone et blanche l'autre du sous-menu\n      this.setIconColor('petite-icone-contours-territoires',false,'');\n      this.setIconColor(e.srcElement,this.sousMenuBasemapVisibility,\"#8BE7BA\");\n\n      //Si on ouvre le card, on change le tooltip\n      if (this.sousMenuBasemapVisibility) { this.toolTipForBasemapBouton='Fermer'; }\n\n      //On supprime le gris de l'autre sous boutons de la categorie\n      this.setBackgroundColor('petit-bouton-contours-territoires',false,'');\n\n      //On supprime toutes les autres cards\n      this.sousMenuContoursTerritoiresVisibility=this.sousMenuMesureVisibility=false;\n\n    }\n    if (e.srcElement.id===\"petite-icone-contours-territoires\") {\n\n      //la variable de visibilité passe à true\n      this.sousMenuContoursTerritoiresVisibility=!this.sousMenuContoursTerritoiresVisibility;\n\n      //On réinitialise les tooltips au cas ou était sur une autre card\n      this.setTooltip();\n\n      //On rend vert l'icone et blanche l'autre du sous-menu\n      this.setIconColor('petite-icone-basemap',false,'');\n      this.setIconColor(e.srcElement,this.sousMenuContoursTerritoiresVisibility,\"#8BE7BA\");\n\n      //Si on ouvre le card, on change le tooltip\n      if (this.sousMenuContoursTerritoiresVisibility) { this.toolTipForContoursTerritoiresBouton='Fermer'; }\n\n      //On supprime toutes les autres cards\n      this.sousMenuBasemapVisibility=this.sousMenuMesureVisibility=false;\n\n    }\n    if (e.srcElement.id===\"petite-icone-mesure\") {\n\n      //la variable de visibilité passe à true\n      this.sousMenuMesureVisibility=!this.sousMenuMesureVisibility;\n\n      //On rend vert l'icone\n      this.setIconColor(e.srcElement,this.sousMenuMesureVisibility,\"#8BE7BA\");\n\n      //Si on ouvre le card, on change le tooltip\n      if (this.sousMenuMesureVisibility) { this.toolTipForMesureBouton='Fermer'; }\n\n      //On supprime toutes les autres cards\n      this.sousMenuBasemapVisibility=this.sousMenuContoursTerritoiresVisibility=false;\n\n    }\n    if (e.srcElement.id===\"petite-icone-impression\") {\n\n      //On lance l'impression\n      this.impressionCarte();\n\n      //On réinitialise les tooltips au cas ou était sur une autre card\n      this.setTooltip();\n\n      //On rend blanc l'autre icone du sous-menu\n      this.setIconColor('petite-icone-mesure',false,'');\n\n      //On supprime toutes les autres cards\n      this.sousMenuBasemapVisibility=this.sousMenuContoursTerritoiresVisibility=this.sousMenuMesureVisibility=false;\n    }\n  }\n\n\n  /**\n    * Ferme tous les sous menus\n   */\n  fermeSousMenu(){ this.sousMenuBasemapVisibility=this.sousMenuContoursTerritoiresVisibility=this.sousMenuMesureVisibility=false; }\n\n\n  //Pour definir couleur (bool=true) ou dégriser (bool=true) si c'est evenement ou id d'1 HTML element\n  /**\n    * Définie la couleur ou dégrise si bool=true\n    * Fonctionne pour l'id d'un HTMLElement ou pour un evenement\n    * @param {string} elem\n    * @param {bool} bool\n    * @param {string} color\n   */\n  setBackgroundColor(elem,bool,color){\n    if (typeof elem===\"string\") {\n      if (bool) { document.getElementById(elem).style.backgroundColor=color; }\n      else{ document.getElementById(elem).style.backgroundColor=''; }\n    }\n    else{\n      if (bool) { elem.style.backgroundColor=color; }\n      else{ elem.style.backgroundColor=''; }\n    }\n  }\n\n\n  /**\n    * Définie la couleur ou dégrise si bool=true\n    * Fonctionne pour l'id d'un HTMLElement ou pour un evenement\n    * @param {string} or {HTMLElement} elem\n    * @param {bool} bool\n    * @param {string} color\n   */\n  setIconColor(elem,bool,color){\n    if (typeof elem===\"string\") {\n      if (bool) { document.getElementById(elem).style.color=color; }\n      else{ document.getElementById(elem).style.color=''; }\n    }\n    else{\n      if (bool) { elem.style.color=color; }\n      else{ elem.style.color=''; }\n    }\n  }\n\n\n  /**\n    * Sert dans sous menu basempap et contours territoires donc defini ici\n    * Supprime les couches quo ont l'idLayer\n    * @param {map} map\n    * @param {string} idLayer\n   */\n  deleteLayer(map,idLayer){\n    map.eachLayer(function(layer){\n      if (layer.options.id===idLayer) { map.removeLayer(layer); }\n    });\n  }\n\n\n  /**\n    * Désactive le menu lorsqu'on mesure sur la carte\n    * @param {bool} bool\n   */\n  disableMenu(bool){\n    var menu=document.getElementById('conteneur-boutons-du-menu-outils');\n    if (bool) { menu.classList.add('non-clickable'); }\n    else{ menu.classList.remove('non-clickable'); }\n    this.menuDisabled=bool;\n  }\n\n\n  ///IMPRESSION DE LA CARTE///\n\n  /**\n    * Lance l'impression de la carte\n   */\n  impressionCarte(){\n    this.hideMenu(true);\n    setTimeout(() => {\n      window.print();\n      this.hideMenu(false);\n    }, 1);\n  }\n\n  /**\n    * Cache les éléments au dessus de la carte lors de l'impression\n    * @param {bool} x\n   */\n  hideMenu(x){\n    var elem=document.getElementsByClassName('leaflet-top leaflet-left')[0] as HTMLElement;\n    if (x) {elem.style.visibility='hidden';}\n    else{ elem.style.visibility='visible';}\n    this.appComponent.setPrinting(x);\n  }\n\n  ///FIN IMPRESSION DE LA CARTE///\n\n\n}\n","\n<app-sous-menu-basemap *ngIf='sousMenuBasemapVisibility'></app-sous-menu-basemap>\n\n<app-sous-menu-contours-territ *ngIf='sousMenuContoursTerritoiresVisibility'></app-sous-menu-contours-territ>\n\n<app-sous-menu-mesure *ngIf='sousMenuMesureVisibility'></app-sous-menu-mesure>\n\n<div id=\"conteneur-boutons-du-menu-outils\">\n\n  <div id=\"conteneur-boutons-options-carte\">\n\n    <button mat-icon-button id=\"grand-bouton-options-carte\" class=\"grand-bouton\" matTooltip=\"Options de carte\" matTooltipPosition='left' [disabled]='menuDisabled'>\n      <mat-icon aria-hidden=\"true\" id='grande-icone-options-carte' (click)='afficheConteneurSousBoutonsOptionsCarte($event)' class=\"grande-icone\" >map</mat-icon>\n    </button>\n\n    <div id=\"conteneur-sous-boutons-options-carte\" *ngIf='sousBoutonsOptionsCarteVisibility' class=\"conteneur-boutons-sous-categorie\">\n\n      <button mat-icon-button id=\"petit-bouton-basemap\" class=\"petit-bouton\" [matTooltip]=\"toolTipForBasemapBouton\" matTooltipPosition='left'>\n        <mat-icon aria-hidden=\"true\" id='petite-icone-basemap' class=\"petite-icone\" (click)='afficheSousMenu($event)'>layers</mat-icon>\n      </button>\n\n      <button mat-icon-button id=\"petit-bouton-contours-territoires\" class=\"petit-bouton\" [matTooltip]=\"toolTipForContoursTerritoiresBouton\" matTooltipPosition='left'>\n        <mat-icon aria-hidden=\"true\" id='petite-icone-contours-territoires' class=\"petite-icone\" (click)='afficheSousMenu($event)'>emoji_flags</mat-icon>\n      </button>\n\n    </div>\n  </div>\n\n  <div id=\"conteneur-boutons-outils\">\n\n    <button mat-icon-button id=\"grand-bouton-outils\" class=\"grand-bouton\" matTooltip=\"Outils\" matTooltipPosition='left' [disabled]='menuDisabled'>\n      <mat-icon aria-hidden=\"true\" id='grande-icone-outils' (click)='afficheConteneurSousBoutonsOutils($event)' class=\"grande-icone\">build</mat-icon>\n    </button>\n\n    <div id=\"conteneur-sous-boutons-outils\" *ngIf='sousBoutonsOutilsVisibility' class=\"conteneur-boutons-sous-categorie\">\n\n      <button mat-icon-button id=\"petit-bouton-mesure\" class=\"petit-bouton\" [matTooltip]=\"toolTipForMesureBouton\" matTooltipPosition='left' [disabled]='menuDisabled'>\n        <mat-icon aria-hidden=\"true\" id='petite-icone-mesure' class=\"petite-icone\" (click)='afficheSousMenu($event)'>square_foot</mat-icon>\n      </button>\n\n      <button mat-icon-button id=\"petit-bouton-impression\" class=\"petit-bouton\" [matTooltip]=\"toolTipForImpressionBouton\" matTooltipPosition='left' [disabled]='menuDisabled'>\n        <mat-icon aria-hidden=\"true\" id='petite-icone-impression' class=\"petite-icone\" (click)='afficheSousMenu($event)'>print</mat-icon>\n      </button>\n    </div>\n  </div>\n</div>\n","import {Component} from '@angular/core';\nimport { AppComponent } from '../../app.component';\nimport {FormControl} from '@angular/forms';\nimport {Observable} from 'rxjs';\nimport {map, startWith, filter} from 'rxjs/operators';\nimport {LayersComponent} from '../../components/layers/layers.component';\nimport { LayersServiceService } from './../../services/layers-service.service';\n\nimport * as L from 'leaflet';\n\n@Component({\n  selector: 'app-module-recherche',\n  templateUrl: './module-recherche.component.html',\n  styleUrls: ['./module-recherche.component.css']\n})\nexport class ModuleRechercheComponent{\n\n  public xmlString : string;\n\n  //Variables qui vont suivre si l'input de l'utilisateur fait partie du catalogue de couches\n  public presentN: boolean= false;\n  public present: boolean=false;\n\n  //Variables où on va stocker les différents noms de couches, protocoles et espace de travail\n  public  array_nom_protocol : Array<string>= [];\n  public array_nom_couches: Array<string>= [];\n  public array_nom_types: Array<string>= [];\n\n  //Booleens qui vont déterminer l'affichage d'un message d'information spécifique à la recherche par attribut\n  public info:boolean=true;\n  public infoCard=false;\n\n  public validerDisa=false;\n  public boutSupprDisa=true;\n\n\n  //Si on veut utiliser les fonctions de appComponent :\n  constructor(private appComponent: AppComponent,private layersComponent: LayersComponent,private layersService: LayersServiceService) {\n\n  }\n  recup=this.layersService.getXml().subscribe(\n    (recup) => {\n      this.xmlString= recup;\n      var stringxml=this.xmlString;\n      \n      // parser xml et récuperer les 2 arrays : espace:nom_couche / [nom_couche , protocol]\n      var arrays = this.layersComponent.parsing_recup_XML(this.xmlString)\n      var nom_couche=arrays[0];\n\n      // var nom_couches=this.recup_nom(nom_couche);\n      var nom_couches=[];\n      var nom_types=[];\n      var str;\n      var i : string | number;\n\n      /**\n       * Pour la constitution du catalogue, on classe les couches en deux classes 'couches' et\n       *'types', qui correspondent à l'espace de travail auquel elles appartiennent\n       */\n      for (i in nom_couche){\n        str= nom_couche[i];\n        var array = str.split(\":\");\n        if (array[0]=='couches'){\n          nom_couches.push(array[1]);\n        }\n        else if(array[0]=='types'){\n          nom_types.push(array[1]);\n        }\n      }\n\n      //On stocke les différentes valeurs du catalogue de couches dans les variables définies au départ\n      this.array_nom_protocol=nom_couche;\n      this.array_nom_couches=nom_couches;\n      this.array_nom_types=nom_types;\n\n      //ici pour la recherche par attribut, les options vont être les couches d'espace de travail 'types'\n      var options= this.array_nom_types;\n\n      //Portion de code qui permet que la liste des options d'input évolue au fur et à mesure de l'input de l'utilisateur\n      this.filteredOptions = this.myControl.valueChanges\n      .pipe(\n        startWith(''),\n        map(value => { const filterValue = value.toLowerCase();\n\n          //On teste à chaque fois que l'input change si l'input actuel fait partie du catalogue de couches\n          if (options.includes(value)){\n            this.present=true;\n          }\n          else{\n            this.present=false;\n          }\n\n          return options.filter(option => option.toLowerCase().includes(filterValue));\n\n        }),\n      );\n\n      //Procédure analogue pour la recherche par nom avec les couches 'couches'\n      var optionsN: string[] = this.array_nom_couches;\n      this.filteredOptionsN = this.myControlN.valueChanges\n      .pipe(\n        startWith(''),\n        map(value => { const filterValue = value.toLowerCase();\n          if (optionsN.includes(value)){\n            this.presentN=true;\n          }\n          else{\n            this.presentN=false;\n          }\n          return optionsN.filter(option => option.toLowerCase().includes(filterValue));\n\n        }),\n      );\n    })\n\n  //formControl qui suit l'input de l'utilisateur dans recherche par attribut\n  myControl = new FormControl();\n\n  filteredOptions: Observable<string[]>;\n\n  //formControl qui suit l'input de l'utilisateur dans recherche par nom\n  myControlN = new FormControl();\n  filteredOptionsN: Observable<string[]>;\n\n  /**\n    * Getteur de array_nom_couches\n    * @return {string[]}\n   */\n  public getArray() {\n    return this.array_nom_couches;\n  }\n\n  /**\n    * fonction qui sert à récuperer seulement le nom de la couche dans un array qui contient\n    * espace:nom couche\n    * @return {string[]}\n   */\n  recup_nom(array_espace_nom : Array<string>){\n    var array_nom =[];\n    var str;\n    var i : string | number;\n    for (i in array_espace_nom){\n      str= array_espace_nom[i];\n      var array = str.split(\":\");\n      array_nom.push(array[1]);\n\n    }\n    return array_nom\n  }\n\n    /**\n    * fonction qui sert à récuperer seulement l'espace de travail de la couche dans un array\n    *  qui contient espace:nom couche\n    * @return {string[]}\n   */\n  recup_espace(array_espace_nom : Array<string>){\n    var array_espace =[];\n    var str;\n    var i : string | number;\n    for (i in array_espace_nom){\n      str= array_espace_nom[i];\n      var array = str.split(\":\");\n      array_espace.push(array[0]);\n\n    }\n    return array_espace\n  }\n\n\n  /**\n    * Fait la selection et recherche la couche (pour type)\n    * @param {string[]} value\n    * @param {bool} present\n   */\n  recherche(value:string[],present){\n\n    if (!present){ alert('Cette couche est inconnue'); }\n\n    else{\n\n      //On affiche la popup qui nous dit de selectionner une zone\n      this.infoCard=true;\n\n      //necessaire pour y faire appel dans les fonctions:\n      var self=this;\n      var couche=value;\n\n      //On récupère la carte\n      var carte=this.appComponent.getMap();\n\n      //On récupère des éléments HTML\n      var carteContenant=document.getElementById('mymap');\n      var boutValider=document.getElementById('valide1');\n      var iconeSuppr=document.getElementById('iconeSuppr');\n\n      //Définition des variables\n      var oneCorner;\n      var twoCorner;\n      var bounds;\n      var areaRect;\n      var areaRectHa;\n\n      //On doit iniialiser ces variables au hasard et elles seront supprimés:\n      var rect=L.rectangle([[1,1],[1,1]], {color:\"#ff7800\", weight:0.8});\n      var rectMove=L.rectangle([[1,1],[1,1]], {color:\"#ff7800\", weight:1});\n\n      //On active la possibilité de draguer pour dessiner\n      carte.on('mousedown', setOneCorner);\n      carte.on('mouseup', setTwoCorner);\n\n      //Pour plus de précision lors du drag\n      carteContenant.style.cursor='crosshair';\n      carte.dragging.disable();\n\n\n      /**\n        * Définie le coint haut gauche du rectangle de selection\n        * @param {event} e\n       */\n      function setOneCorner(e){\n\n        oneCorner = e.latlng;\n\n        //On va dessiner un rectangle au mouvement de la souris pour avoir une idee de ce que on est en train de dessiner\n        carte.on('mousemove',onMove);\n      }\n\n\n      /**\n        * Définie le coint bas droit du rectangle de selection et le dessine\n        * @param {event} e\n       */\n      function setTwoCorner(e){\n\n        //On supprime le derier rectangle lors du mouvement de souris\n        rectMove.remove();\n\n        //On stop l'écoute sur la carte car la selection est finie\n        carte.off('mousedown', setOneCorner);\n        carte.off('mouseup', setTwoCorner);\n        carte.off('mousemove',onMove);\n\n        //On définie le coint bas droit du rectangle et on le dessine\n        twoCorner = e.latlng;\n        bounds = L.latLngBounds([oneCorner, twoCorner]);\n        rect=L.rectangle(bounds, {color:\"#ff7800\", fill:false,weight:1}).addTo(carte);\n\n        //On calcule l'aire du rectangle selectionné\n        let sw=bounds.getSouthWest();\n        let nw=bounds.getNorthWest();\n        let se=bounds.getSouthEast();\n        let ne=bounds.getNorthEast();\n        areaRect=sw.distanceTo(nw)*se.distanceTo(ne);\n        areaRectHa=areaRect/10000;\n\n        if (areaRectHa<100) {\n\n          //On supprime le rectangle et on réessaie\n          rect.remove();\n          alert('Selection trop petite, réessayez');\n          self.recherche(couche,present);\n        }\n\n        else if (areaRectHa>10000000) {\n\n          //On supprime le rectangle et on réessaie\n          rect.remove();\n          alert('Selection trop grande, réessayez');\n          self.recherche(couche,present);\n        }\n\n        else{\n          //On revient aux reglages carte d'origine\n          carte.dragging.enable();\n          carteContenant.style.cursor='grab';\n\n          //On demande au plugin d'afficher la couche\n          self.addPlug(couche,rect);\n\n          //On supprime la popup info\n          self.infoCard=false;\n\n          //On active la bouton supprimer couche\n          self.boutSupprDisa=false;\n          iconeSuppr.classList.remove('butt-disabled');\n          iconeSuppr.classList.add('butt-enable');\n        }\n\n      }\n\n\n      /**\n        * Dessine le rectange intermediaire lors du mvt de la souris\n        * @param {event} e\n       */\n      function onMove(e) {\n        rectMove.remove();\n        rectMove=L.rectangle([oneCorner, e.latlng], {color:\"#ff7800\", weight:1}).addTo(carte);\n      }\n\n    }\n\n\n  }\n\n\n  /**\n    * Supprime la selection\n   */\n  deleteSelection() {\n    var carte=this.appComponent.getMap();\n    carte.eachLayer(function(layer){\n      if (layer.options.geometryField) { layer.remove();  }\n      if (layer.options.color) { layer.remove();  }\n    });\n  }\n\n\n  /**\n    * Demande au plugin d'afficher la couche\n    * @param {string[]} value\n    * @param {L.rectangle} filtre\n   */\n  public addPlug(value:string[],filtre) {\n      this.appComponent.addPlugin('types',this.myControl.value.toLowerCase(),'red',filtre);\n  }\n\n\n  /**\n    * Si la couche existe, alors on demande au plugin d'afficher la couche\n    * @param {string[]} value\n    * @param {bool} present\n   */\n  public addPlugN(value:string[],present){\n    if(present){ this.appComponent.addPlugin('couches',this.myControlN.value.toLowerCase(),'red','sans filtre'); }\n    else{ alert('Cette couche est inconnue'); }\n  }\n\n\n  /**\n    * change le focus de mat tab group\n   */\n  public reverseInfo(){\n    this.info=!this.info;\n  }\n\n\n}\n","<mat-card>\n\n  <mat-card-header>\n    <mat-card-title>\n      Module de recherche\n    </mat-card-title>\n  </mat-card-header>\n\n\t<mat-tab-group class=\"barre\" (focusChange)='reverseInfo()'>\n\n\t  <mat-tab id=\"rechercheattribut\" label=\"Recherche par attribut\">\n\n\t\t<form id=\"form-rechercheAttribut\">\n\t\t\t<mat-form-field class=\"example-full-width\">\n        <mat-label>Choisir un attribut:</mat-label>\n\n  \t\t\t<input id='input1'\n\t\t\t  \t\t   type=\"text\"\n    \t\t\t\t\t placeholder=\"Ex: marin\"\n    \t\t\t\t\t aria-label=\"Attribut\"\n    \t\t\t\t\t matInput\n    \t\t\t\t\t [formControl]=\"myControl\"\n    \t\t\t\t\t [matAutocomplete]=\"auto\">\n\n    \t\t<mat-autocomplete #auto=\"matAutocomplete\" >\n          <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">{{option}}</mat-option>\n\t\t\t  </mat-autocomplete>\n\n\t\t\t </mat-form-field>\n       <button id='valide1' mat-raised-button color='black' (click)=\"recherche(['zn','nat','inpg','ep'],present)\" [disabled]='(myControl.value==null || myControl.value==\"\") '>Valider</button>\n\t\t </form>\n\n\t  </mat-tab>\n\n      <mat-tab id=\"recherchenom\" label=\"Recherche par nom\" [disabled]='infoCard'>\n\n        <form id=\"form-rechercheAttribut\">\n          <mat-form-field class=\"examples-full-width\">\n            <mat-label>Entrez le nom de la couche:</mat-label>\n\n            <input type=\"text\"\n            \t\t\t placeholder=\"Ex: marine\"\n            \t\t\t aria-label=\"Nom\"\n            \t\t\t matInput\n            \t\t\t [formControl]=\"myControlN\"\n            \t\t\t [matAutocomplete]=\"auto1\">\n\n            <mat-autocomplete #auto1=\"matAutocomplete\">\n              <mat-option *ngFor=\"let optionN of filteredOptionsN | async\" [value]=\"optionN\"> {{optionN}} </mat-option>\n\t\t        </mat-autocomplete>\n\t\t      </mat-form-field>\n\n\t\t      <button id='valide2' mat-raised-button color='black' (click)=\"addPlugN(array_nom_couches,presentN)\" [disabled]='(myControlN.value==null || myControlN.value==\"\") '> Valider </button>\n\t\t    </form>\n\t    </mat-tab>\n\n   </mat-tab-group>\n\n</mat-card>\n\n<mat-card *ngIf='infoCard && info' id=\"infoCard\">\n  <mat-card-content>\n    <p>Info : Veuillez selectionner une zone où afficher la couche</p>\n  </mat-card-content>\n</mat-card>\n\n<div id=\"divBoutSuppr\">\n  <button mat-icon-button id=\"boutSuppr\" matTooltip=\"Supprimer la couche\" matTooltipPosition='right' [disabled]='boutSupprDisa'>\n    <mat-icon aria-hidden=\"true\" id=\"iconeSuppr\" class=\"butt-disabled\" (click)='deleteSelection()'>delete</mat-icon>\n  </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { AppComponent } from \"../../app.component\";\nimport { InfoCoucheComponent } from \"../info-couche/info-couche.component\";\n\nimport * as L from 'leaflet';\n\n@Component({\n  selector: 'app-recherche-selection',\n  templateUrl: './recherche-selection.component.html',\n  styleUrls: ['./recherche-selection.component.css']\n})\nexport class RechercheSelectionComponent implements OnInit {\n\n  constructor(private appComponent: AppComponent, private infoCoucheComponent: InfoCoucheComponent) { }\n\n  selectionning=false;\n  boutRechercheDisabled=true;\n  hiddenButRecherche=true;\n\n  ngOnInit(): void {\n\n    var listCouchesTypes=[['zn','red'],['nat','black'],['inpg','green'],['ep','yellow']];\n    var listCouchesNoms=[['baseexp_stations','red'],['baseexp_traits','black'],['donneesstations_languedocroussillon','green'],['metrop_znieff1','yellow'],['metrop_znieff2','purple']];\n\n    var self=this;\n    var app=this.appComponent;\n    var info=this.infoCoucheComponent;\n\n    var carte=this.appComponent.getMap();\n\n    var buttCommencer=document.getElementById('boutCommencer');\n    var buttRechercherType=document.getElementById('boutRechercherType');\n    var buttRechercherNom=document.getElementById('boutRechercherNom');\n\n    var carteContenant=document.getElementById('mymap');\n\n    var choice=false;\n\n    var listePoints=[];\n    var listLatLng=[];\n\n    var oneCorner;\n    var twoCorner;\n\n    var bounds;\n    var rect=L.rectangle([[1,1],[1,1]], {color:\"#ff7800\", weight:0.8});\n    var rectMove=L.rectangle([[1,1],[1,1]], {color:\"#ff7800\", weight:1});\n    var areaRect;\n    var areaRectHa;\n\n    L.DomEvent.on(buttCommencer, 'click',selectionner, this);\n\n\n    function selectionner() {\n\n      choice=!choice;\n\n      if (choice) {\n        carte.on('mousedown', setOneCorner);\n        carte.on('mouseup', setTwoCorner);\n        carte.dragging.disable();\n        buttCommencer.innerHTML='Annuler la selection';\n        buttCommencer.classList.add('butt-red');\n        buttCommencer.classList.remove('butt-green');\n        carteContenant.style.cursor='crosshair';\n        this.hiddenButRecherche=false;\n      }\n      else{\n        deleteSelection();\n        carte.dragging.enable();\n        carte.off('mousedown', setOneCorner);\n        carte.off('mouseup', setTwoCorner);\n        self.boutRechercheDisabled=true;\n        buttCommencer.innerHTML='Commencer la selection';\n        buttCommencer.classList.add('butt-green');\n        buttCommencer.classList.remove('butt-red');\n\n        carteContenant.style.cursor='grab';\n        this.hiddenButRecherche=true;\n      }\n    }\n\n\n    function setOneCorner(e){\n\n      oneCorner = e.latlng;\n      carte.on('mousemove',onMove);\n    }\n\n\n    function setTwoCorner(e){\n\n      rectMove.remove();\n\n      carte.off('mousemove',onMove);\n      carte.off('mousedown', setOneCorner);\n      carte.off('mouseup', setTwoCorner);\n\n      carte.dragging.enable();\n      carteContenant.style.cursor='grab';\n\n      twoCorner = e.latlng;\n      bounds = L.latLngBounds([oneCorner, twoCorner]);\n\n      rect=L.rectangle(bounds, {color:\"#ff7800\", fill:false,weight:1}).addTo(carte);\n\n      let sw=bounds.getSouthWest();\n      let nw=bounds.getNorthWest();\n      let se=bounds.getSouthEast();\n      let ne=bounds.getNorthEast();\n      areaRect=sw.distanceTo(nw)*se.distanceTo(ne);\n      areaRectHa=areaRect/10000;\n      if (areaRectHa<100) { alert('Selection trop petite'); }\n      else if (areaRectHa>2000000) { alert('Selection trop grande'); }\n      else{ self.boutRechercheDisabled=false; }\n\n      L.DomEvent.on(buttRechercherType, 'click',rechercherType, this);\n\n      L.DomEvent.on(buttRechercherNom, 'click',rechercherNom, this);\n\n    }\n\n    function onMove(e) {\n      rectMove.remove();\n      rectMove=L.rectangle([oneCorner, e.latlng], {color:\"#ff7800\", weight:1}).addTo(carte);\n    }\n\n\n    function deleteSelection() {\n      app.setAffiching(false);\n      carte.eachLayer(function(layer){\n        if (layer.options.geometryField) { layer.remove();  }\n      });\n      rect.remove();\n    }\n\n\n    function rechercherType() {\n\n      app.setAffiching(true);\n      info.afficheCoucheType(listCouchesTypes);\n\n      self.boutRechercheDisabled=true;\n\n      listCouchesTypes.forEach(elem => {\n        app.addPlugin('types',elem[0],elem[1],rect);\n      });\n\n    }\n\n\n    function rechercherNom() {\n\n      app.setAffiching(true);\n      info.afficheCoucheNom(listCouchesNoms);\n\n      self.boutRechercheDisabled=true;\n\n      listCouchesNoms.forEach(elem => {\n        app.addPlugin('couches',elem[0],elem[1],rect);\n      });\n\n    }\n\n\n\n  }\n\n}\n","<mat-card id='card-recherche'>\n  <mat-card-header>\n    <div></div>\n    <mat-card-title>Recherche par selection</mat-card-title>\n  </mat-card-header>\n  <mat-card-content>\n    <div>\n      <button mat-raised-button type=\"button\" id=\"boutCommencer\" class='butt-green'>Commencer la mesure</button>\n    </div>\n    <div [hidden]='hiddenButRecherche' id=\"divRecherche\">\n      <button mat-raised-button type=\"button\" id=\"boutRechercherType\"  [disabled]='boutRechercheDisabled'>Rechercher par type</button>\n      <br><button mat-raised-button type=\"button\" id=\"boutRechercherNom\" [disabled]='boutRechercheDisabled'>Rechercher par nom</button>\n    </div>\n  </mat-card-content>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { MenuOutilsComponent } from \"../../menu-outils/menu-outils.component\";\nimport { AppComponent } from \"../../../app.component\";\n\nimport * as L from 'leaflet';\n\n@Component({\n  selector: 'app-sous-menu-basemap',\n  templateUrl: './sous-menu-basemap.component.html',\n  styleUrls: ['./sous-menu-basemap.component.css']\n})\nexport class SousMenuBasemapComponent implements OnInit{\n\n\n  /**\n    * Appel des components parents\n    * @param {component} appComponent\n    * @param {component} menuOutilsComponent\n   */\n  constructor(private appComponent: AppComponent,private menuOutilsComponent: MenuOutilsComponent) {}\n\n\n  //variable de classe contenant l'id de la basempap affichée\n  checkedBasemap;\n\n\n  /**\n    * Trouve quelle basempap est affichee\n   */\n  ngOnInit(){\n\n    //On récupère la carte et définie la variable qui contiendra l'id de la basemaps\n    var map=this.appComponent.getMap();\n    var quelbase;\n\n    //Si la couche affichée n'est pas une frontière on récupère son id\n    map.eachLayer(function(layer){\n      if (layer.options.id && (layer.options.id!='depFr' && layer.options.id!='regFr')) { quelbase=layer.options.id; }\n    });\n    this.checkedBasemap=quelbase;\n  }\n\n\n  /**\n    * Change de basemap au click sur un radio bouton\n    * @param {event} e\n   */\n  changeBasemap(e){\n\n    //On définie toutes les basemaps\n    var street_mapbox= L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {\n              attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n              id: 'mapbox.streets',\n              accessToken: this.appComponent.getMapboxAccessToken()\n    });\n    var light = L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {\n              id: 'mapbox.light',\n              attribution: 'Map data &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors, ' + '<a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, ' +'Imagery © <a href=\"https://mapbox.com\">Mapbox</a>',\n              accessToken: this.appComponent.getMapboxAccessToken()\n    });\n    var OSM= L.tileLayer(\"http://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\",{\n              id : 'osm',\n              attribution : '<a href=\"https://www.openstreetmap.org/\">Open Street Map</a>'\n    });\n    var streets_osm = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',{\n              id : 'streets.osm',\n              attribution : '<a href=\"https://www.openstreetmap.org/\">Open Street Map</a>'\n    });\n    var World_topo_Map = new L.TileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/' + 'World_Topo_Map/MapServer/tile/{z}/{y}/{x}',{\n              id : 'world.topo.map',\n              attribution : '<a href=\"https://www.esri.com/fr-fr/home\">ESRI</a>'\n    });\n    var World_Imagery = new L.TileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/' + 'World_Imagery/MapServer/tile/{z}/{y}/{x}',{\n              id : 'world.imagery',\n              attribution : '<a href=\"https://www.esri.com/fr-fr/home\">ESRI</a>'\n    });\n    var World_Shaded_Relief = new L.TileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/' +'World_Shaded_Relief/MapServer/tile/{z}/{y}/{x}',{\n              id : 'world.shaded.relief',\n              maxZoom : 13,\n              attribution : '<a href=\"https://www.esri.com/fr-fr/home\">ESRI</a>'\n    });\n    var World_Terrain_Base = new L.TileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/' + 'World_Terrain_Base/MapServer/tile/{z}/{y}/{x}',{\n              id : 'world.terrain.base',\n              maxZoom : 9,\n              attribution : '<a href=\"https://www.esri.com/fr-fr/home\">ESRI</a>'\n    });\n    var World_Street_Map = new L.TileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/' + 'World_Street_Map/MapServer/tile/{z}/{y}/{x}',{\n              id : 'world.street.map',\n              attribution : '<a href=\"https://www.esri.com/fr-fr/home\">ESRI</a>'\n    });\n\n    //On les range dans un tableau\n    var basemaps=[\n      {   \"varlayer\" : street_mapbox,\n          \"id\" : \"mapbox.streets\",\n          \"label\" : \"Mapbox Streets\"\n      },\n      {   \"varlayer\" : light,\n          \"id\" : \"mapbox.light\" ,\n          \"label\" : \"Mapbox Light\"\n      },\n      {   \"varlayer\" : OSM,\n          \"id\" : \"osm\",\n          \"label\" : \"OSM Standard\"\n      },\n      {   \"varlayer\" : streets_osm,\n          \"id\" : \"streets.osm\" ,\n          \"label\" : \"OSM Streets\"\n      },\n      {   \"varlayer\" : World_topo_Map,\n          \"id\" : \"world.topo.map\" ,\n          \"label\" : \"ESRI World topo Map\"\n      },\n      {   \"varlayer\" : World_Imagery,\n          \"id\" : \"world.imagery\" ,\n          \"label\" : \"ESRI World Imagery\"\n      },\n      {   \"varlayer\" : World_Shaded_Relief ,\n          \"id\" : \"world.shaded.relief\" ,\n          \"label\" : \"ESRI World Shaded Relief \"\n      },\n      {   \"varlayer\" : World_Terrain_Base ,\n          \"id\" : \"world.terrain.base\" ,\n          \"label\" : \"ESRI World Terrain Base \"\n      },\n      {   \"varlayer\" : World_Street_Map ,\n          \"id\" : \"world.street.map\" ,\n          \"label\" : \"ESRI World Street Map\"\n      }];\n\n    //Selon le bouton clické, on supprime toutes les autres basemap et on l'ajoute\n    for (let i = 0; i < basemaps.length; i++) {\n\n      this.menuOutilsComponent.deleteLayer(this.appComponent.getMap(),basemaps[i]['id']);\n      \n      if (basemaps[i]['id']===e.source.id) { basemaps[i]['varlayer'].addTo(this.appComponent.getMap()); }\n    }\n\n  }\n\n\n}\n","<mat-card id='card-basemap'>\n\n    <mat-card-header>\n      <mat-card-title>Fond de carte</mat-card-title>\n    </mat-card-header>\n\n    <div class=\"conteneur-radio-boutons-basemaps\">\n      <mat-radio-group>\n\n        <p class=\"baseMap-category\"><strong>Mapbox :</strong></p>\n\n        <mat-radio-button id='mapbox.streets' value='mapbox.streets' class=\"radio-button-above\" [checked]=\"checkedBasemap=='mapbox.streets'\" (change)='changeBasemap($event)'>Mapbox Streets</mat-radio-button><br>\n\n        <mat-radio-button value=\"mapbox.light\" id='mapbox.light'  [checked]=\"checkedBasemap=='mapbox.light'\"  (change)='changeBasemap($event)'>Mapbox Light</mat-radio-button>\n\n\n        <p class=\"baseMap-category\" id=\"OSM\"><strong>Open Street Map :</strong></p>\n\n        <mat-radio-button value=\"osm\" id='osm' class=\"radio-button-above\" [checked]=\"checkedBasemap=='osm'\" (change)='changeBasemap($event)'>OSM Standard</mat-radio-button><br>\n\n        <mat-radio-button value=\"streets.osm\" id='streets.osm' [checked]=\"checkedBasemap=='streets.osm'\" (change)='changeBasemap($event)'>OSM Streets</mat-radio-button>\n\n\n        <p class=\"baseMap-category\" id=\"ESRI\"><strong>ESRI :</strong></p>\n\n        <mat-radio-button value=\"world.topo.map\" id='world.topo.map' class=\"radio-button-above\" [checked]=\"checkedBasemap=='world.topo.map'\" (change)='changeBasemap($event)'>ESRI World topo Map</mat-radio-button><br>\n\n        <mat-radio-button value=\"world.imagery\" id='world.imagery' class=\"radio-button-above\" [checked]=\"checkedBasemap=='world.imagery'\" (change)='changeBasemap($event)'>ESRI World Imagery</mat-radio-button><br>\n\n        <mat-radio-button value=\"world.shaded.relief\" id='world.shaded.relief' class=\"radio-button-above\" [checked]=\"checkedBasemap=='world.shaded.relief'\" (change)='changeBasemap($event)'>ESRI World Shaded Relief</mat-radio-button><br>\n\n        <mat-radio-button value=\"world.terrain.base\" id='world.terrain.base' class=\"radio-button-above\" [checked]=\"checkedBasemap=='world.terrain.base'\" (change)='changeBasemap($event)'>ESRI World Terrain Base</mat-radio-button><br>\n\n        <mat-radio-button value=\"world.street.map\" id='world.street.map' [checked]=\"checkedBasemap=='world.street.map'\" (change)='changeBasemap($event)'>ESRI World Street Map</mat-radio-button>\n\n      </mat-radio-group>\n    </div>\n\n  </mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { MenuOutilsComponent } from \"../../menu-outils/menu-outils.component\";\nimport { AppComponent } from \"../../../app.component\";\nimport { environment } from '../../../../environments/environment';\n\nimport * as L from 'leaflet';\n\n@Component({\n  selector: 'app-sous-menu-contours-territ',\n  templateUrl: './sous-menu-contours-territ.component.html',\n  styleUrls: ['./sous-menu-contours-territ.component.css']\n})\nexport class SousMenuContoursTerritComponent implements OnInit{\n\n  /**\n    * Appel des components parents\n    * @param {component} appComponent\n    * @param {component} menuOutilsComponent\n   */\n  constructor(private appComponent: AppComponent,private menuOutilsComponent: MenuOutilsComponent) {}\n\n\n  //variables de classes qui définissent si les checkobox sont cochées ou non\n  checkedReg;\n  checkedDep;\n\n\n  /**\n    * Trouve quel contour est affiché à l'affiche du sous-menu\n   */\n  ngOnInit(){\n\n    //On récupère la carte et définie la liste des id des frontières affichées\n    var map=this.appComponent.getMap();\n    var quelcont=[];\n\n    //On remplit la liste avec les id des frontières affichées\n    map.eachLayer(function(layer){\n      if (layer.options.id=='regFr' || layer.options.id=='depFr') { quelcont.push(layer.options.id); }\n    });\n\n    //On check les check box necessaires selon les frontières affichées\n    this.checkedDep=this.checkedReg=false;\n    quelcont.forEach(elem => {\n      if (elem=='depFr') {this.checkedDep=true;}\n      if (elem=='regFr') {this.checkedReg=true;}\n    });\n  }\n\n\n  /**\n    * Affiche les frontières des dép et rég\n    * @param {event} e\n   */\n  afficheFrontieres(e){\n\n    //Définition des deux couches de frontières :\n    var coucheFrontieresDepartements = L.tileLayer.wms(environment.geoserverURL+'frontieres'+\"/wms?service=WMS\", {\n      layers: 'fontieres:departements',\n      format: 'image/png',\n      transparent: true,\n      attribution: '<a href=\"https://www.data.gouv.fr/fr/\">data.gouv.fr</a>',\n      id:'depFr'\n    }).setZIndex(1000);\n\n    var coucheFrontieresRegions = L.tileLayer.wms(environment.geoserverURL+'frontieres'+\"/wms?service=WMS\", {\n      layers: 'frontieres:regions',\n      format: 'image/png',\n      transparent: true,\n      attribution: '<a href=\"https://www.data.gouv.fr/fr/\">data.gouv.fr</a>',\n      id:'regFr'\n    }).setZIndex(1000);\n\n    //On les range dans un tableau\n    var coucheFrontieres=[\n      {   \"varlayer\" : coucheFrontieresDepartements,\n          \"id\" : \"depFr\" ,\n          \"label\" : \"Couche des frontières départementales\"\n      },\n      {   \"varlayer\" : coucheFrontieresRegions,\n          \"id\" : \"regFr\" ,\n          \"label\" : \"Couche des frontières régionales\"\n      }];\n\n    //Suivant si on coche et décoche une des deux chekbox, on ajoute ou supprime couche\n    if (e.checked) {\n      for (let i = 0; i < coucheFrontieres.length; i++) {\n\n        //On ajoute une couche :\n        if (coucheFrontieres[i][\"id\"] === e.source.id) { coucheFrontieres[i][\"varlayer\"].addTo(this.appComponent.getMap()); }\n      }\n    }\n\n    //On supprime une couche :\n    else { this.menuOutilsComponent.deleteLayer(this.appComponent.getMap(),e.source.id); }\n\n  }\n\n\n}\n","<mat-card id=\"exp-panel-frontiere\">\n\n    <mat-card-header>\n      <mat-card-title class=\"mat-panel-title\">Frontières administratives françaises</mat-card-title>\n    </mat-card-header>\n\n      <div id=\"conteneur-boutons\">\n        <mat-checkbox id='depFr' (change)='afficheFrontieres($event)' [checked]='checkedDep'>Départements</mat-checkbox><br>\n        <mat-checkbox id=\"regFr\" (change)='afficheFrontieres($event)' [checked]='checkedReg'>Régions</mat-checkbox>\n      </div>\n\n  </mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { MenuOutilsComponent } from \"../../menu-outils/menu-outils.component\";\nimport { AppComponent } from \"../../../app.component\";\n\nimport * as L from 'leaflet';\n\n@Component({\n  selector: 'app-sous-menu-mesure',\n  templateUrl: './sous-menu-mesure.component.html',\n  styleUrls: ['./sous-menu-mesure.component.css']\n})\nexport class SousMenuMesureComponent implements OnInit {\n\n\n  /**\n    * Appel des components parents si on en a besoin\n    * @param {component} appComponent\n    * @param {component} menuOutilsComponent\n   */\n  constructor(private appComponent: AppComponent,private menuOutilsComponent: MenuOutilsComponent) {}\n\n\n  /**\n    * Initie le sous-menu mesure à l'affichage\n   */\n  ngOnInit(): void {\n\n    //On récupère les éléments HTML dont on aura besoin\n    var carte=this.appComponent.getMap();\n    var carteContenant=document.getElementById('mymap');\n    var boutonsMenu=document.getElementById('conteneur-boutons-du-menu-outils');\n    var distDP=document.getElementById('distDernierPoint');\n    var distTot=document.getElementById('distTot');\n    var butt=document.getElementById('boutton');\n    var contPoints=document.getElementById('conteneur-points');\n\n    //Variable qui définie si on est en mode start ou reset : false -> start\n    var choice=false;\n\n    //Définition des variables\n    var listePoints=[];\n    var pointCourant;\n    var distance_km;\n    var distanceTotale=0;\n    var avantDernierPoint;\n    var dernierPoint;\n    var distance_m;\n    var i=1;\n\n    //On écoute le bouton pour commencer et pour reset\n    L.DomEvent.on(butt, 'click',toggle, this);\n\n\n    /**\n      * Suivant la nature du bouton, on commence ou rest une mesure\n     */\n    function toggle() {\n      choice=!choice;\n\n      //On est au start :\n      if (choice) {\n        \n        carte.doubleClickZoom.disable();\n\n        carte.doubleClickZoom.disable();\n\n        //On écoute la carte pour tracer les points et lignes\n        carte.on('click', onClick, this);\n\n        //On empeche l'accès aux boutons pendant la mesure et start devient reset\n        this.menuOutilsComponent.disableMenu(true);\n        carteContenant.style.cursor='crosshair';\n        butt.innerHTML='Réinitialiser la mesure';\n      }\n\n      //On est au reset :\n      else{\n\n        carte.doubleClickZoom.enable();\n\n        //On arrête d'écouter la carte et on supprime les mesures\n        carte.off('click', onClick, this);\n        deleteMeasures();\n\n        //On rétablit les boutons et reset devient start\n        this.menuOutilsComponent.disableMenu(false);\n        carteContenant.style.cursor='grab';\n        butt.innerHTML='Commencer la mesure';\n      }\n    }\n\n    /**\n      * Affiche les lignes, points\n      * @param {event} e\n     */\n    function onClick(e) {\n\n      //On rempli la liste des points à mesurer\n      listePoints.push( [e.latlng.lat,e.latlng.lng] );\n      let l=listePoints.length;\n\n      //On trace la polyligne et calcul la distance à partir de deux points dans la liste\n      if (l>1) {\n\n        calculDistances(listePoints);\n        L.polyline([[listePoints[l-1][0],listePoints[l-1][1]],[listePoints[l-2][0],listePoints[l-2][1]]],{fillOpacity :1,color:'#EC3816'}).addTo(carte);\n      }\n\n      //On trace les points aux extrémités des lignes et on affiche les coordonnées des points\n      L.circleMarker(e.latlng,{radius:4,color:'#EC3816',fillColor:'#EC3816',fillOpacity:1}).addTo(carte);\n      contPoints.style.border='solid';\n      contPoints.innerHTML+='<p style=\"margin-bottom: 0; height:14px;\"><strong>Point '+i+' :</strong> </p><p style=\"margin-bottom: 0;\">lat : '+listePoints[l-1][0].toFixed(5)+' ; '+' long : '+listePoints[l-1][1].toFixed(5)+'</p>';\n\n      i=i+1;\n    }\n\n\n    /**\n      * Supprime les mesures de la carte et du menu\n     */\n    function deleteMeasures(){\n\n      //On remet les variables à 0 pour une nouvelle mesure\n      i=1;\n      listePoints=[];\n      distanceTotale=0;\n\n      //On remet à null les contenants des informations précédentes\n      distDP.innerHTML=distTot.innerHTML=contPoints.innerHTML='';\n      contPoints.style.border=distDP.style.border=distTot.style.border='';\n\n      //On supprime les couches qui ont une valeur fillOpacity (seules les éléments de la mesure en ont)\n      carte.eachLayer(function(layer){\n        if (layer.options.fillOpacity) { carte.removeLayer(layer); }\n      });\n    }\n\n\n    /**\n      * Mesure et affiche les distances avec les points de la liste\n      * @param {array} listePoints\n     */\n    function calculDistances(listePoints) {\n\n        //On rend les contours des div des resultats visibles :\n        distDP.style.border='solid';\n        distTot.style.border='solid';\n\n        let l = listePoints.length;\n        avantDernierPoint =L.latLng(listePoints[l-2][0],listePoints[l-2][1]);\n        dernierPoint=L.latLng(listePoints[l-1][0],listePoints[l-1][1]);\n\n        //On calcule la distance au dernier points (m puis km)\n        distance_m=dernierPoint.distanceTo(avantDernierPoint);\n        distance_km=(distance_m/1000);\n\n        //Distance totale depuis le permier point :\n        distanceTotale=distanceTotale+distance_km;\n\n        //On afffiche ces résultats :\n        distDP.innerHTML='<span style=\"font-weight:bold;\">Au dernier point : </span>'+distance_km.toFixed(3)+' km';\n        distTot.innerHTML='<span style=\"font-weight:bold\">Distance totale : </span>' + distanceTotale.toFixed(3)+' km';\n      }\n\n  }\n\n}\n","<mat-card id='card-mesure'>\n\n  <mat-card-header>\n    <mat-card-title>Mesurer sur la carte</mat-card-title>\n  </mat-card-header>\n\n  <mat-card-content>\n    \n    <div id=\"boutonContainer\">\n      <button mat-raised-button type=\"button\" id=\"boutton\" name=\"button\">Commencer la mesure</button>\n    </div>\n\n    <div id=\"conteneur-points\"></div>\n\n      <p id=\"distDernierPoint\"></p>\n      <p id=\"distTot\"></p>\n\n  </mat-card-content>\n</mat-card>\n","declare const L: any;\nimport 'leaflet-wfst/dist/leaflet-wfst.min.js';\nimport { environment } from './../../environments/environment';\n\n\n/**\n  * Initialise le plugin pour afficher une couche wfs\n  * @param {string} nomWorkspace\n  * @param {string} nomCouche\n  * @param {string} couleur\n  * @param {string} or {L.rectangle} filtre\n */\nexport function initPlugin(nomWorkspace,nomCouche,couleur,filtre) {\n\n  //Options du plugin de récupération de wfst\n  var wfstPointOptions;\n\n  //on initialise le filtre d'afficage des donnnées\n  var filter = new L.Filter.Within('geom_gene',filtre, L.CRS.EPSG3857);\n  filter.toGml();\n\n  //On initialise d'abord les options du plugin\n  //Si on ne demande pas de filtre\n  if (filtre=='sans filtre') {\n\n     wfstPointOptions = {\n      crs: L.CRS.EPSG4326,\n      showExisting: true,\n      geometryField: 'geom',\n      url: 'http://localhost:8080/geoserver/wfs',\n      typeNS: nomWorkspace,\n      typeName: nomCouche,\n      maxFeatures: 1000,\n      opacity: 1,\n      style: (layer) => {\n        return {\n          color: couleur,\n          weight: 1 };\n      }\n\n    };\n\n  }\n\n  //Si on demande un filtre\n  else{\n     wfstPointOptions = {\n      crs: L.CRS.EPSG4326,\n      showExisting: true,\n      geometryField: 'geom',\n      url: 'http://localhost:8080/geoserver/wfs',\n      typeNS: nomWorkspace,\n      typeName: nomCouche,\n      opacity: 1,\n      //On prend le filtre en compte :\n      filter:filter,\n      style: (layer) => {\n        return {\n          color: couleur,\n          weight: 1 };\n      }\n\n    };\n\n  }\n\n  //On rtourne enuite les données wfst transformées en GeoJSON\n  return new L.WFST(\n\n    //On utilise les options :\n    wfstPointOptions,\n\n    new L.Format.GeoJSON({\n\n      crs: L.CRS.EPSG4326,\n\n      pointToLayer(geoJsonPoint, latlng) {\n        return new L.CircleMarker(latlng, {\n          radius: 10, });\n      }\n\n    })\n\n  );\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\nimport { environment } from './../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LayersServiceService {\n\n  private cswUrl: string= environment.geoserverCSW;\n  constructor(private _http: HttpClient) { }\n\n  getXml() {\n    const headers = new HttpHeaders().set('Content-Type', 'text/xml');\n    return this._http.get(this.cswUrl, { headers, responseType: 'text' });\n\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n\n  geoserverURL:\"http://localhost:8080/geoserver/\",\n  geoserverCSW:\"http://localhost:8080/geoserver/csw?service=CSW&version=2.0.2&request=GetRecords&typeNames=gmd:MD_Metadata&maxRecords=1000&resultType=results&elementSetName=full&outputSchema=http://www.isotc211.org/2005/gmd\",\n  geoserverWFS:\"http://localhost:8080/geoserver/wfs\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}