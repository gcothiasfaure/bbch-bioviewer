{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/info-couche/info-couche.component.ts","./src/app/components/info-couche/info-couche.component.html","./src/app/components/layers/conf/wfst-plugin.ts","./src/app/components/layers/layers.component.ts","./src/app/components/layers/layers.component.html","./src/app/components/menu-outils/menu-outils.component.ts","./src/app/components/menu-outils/menu-outils.component.html","./src/app/components/module-recherche/module-recherche.component.ts","./src/app/components/module-recherche/module-recherche.component.html","./src/app/components/recherche-selection/recherche-selection.component.ts","./src/app/components/recherche-selection/recherche-selection.component.html","./src/app/components/sous-menus-outils/sous-menu-basemap/sous-menu-basemap.component.ts","./src/app/components/sous-menus-outils/sous-menu-basemap/sous-menu-basemap.component.html","./src/app/components/sous-menus-outils/sous-menu-contours-territ/sous-menu-contours-territ.component.ts","./src/app/components/sous-menus-outils/sous-menu-contours-territ/sous-menu-contours-territ.component.html","./src/app/components/sous-menus-outils/sous-menu-mesure/sous-menu-mesure.component.ts","./src/app/components/sous-menus-outils/sous-menu-mesure/sous-menu-mesure.component.html","./src/app/conf/wfst-plugin.ts","./src/app/services/layers-service.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n//import { LayersComponent } from './components/layers/layers.component';\n\n\nconst routes: Routes = [\n\t//{ path: 'layers', component: LayersComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","// Ajouter OnInit pour effectuer des opérations à l'initialisation du composant.\nimport { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { map, tileLayer } from 'leaflet';\nimport { initPlugin } from './conf/wfst-plugin';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n// Implémenter OnInit\nexport class AppComponent implements OnInit{\n\n  //Variables de classe\n  map;\n  mapboxAccessToken = \"pk.eyJ1Ijoic3VwZXJwaWthciIsImEiOiI0MGE3NGQ2OWNkMzkyMzFlMzE4OWU5Yjk0ZmYzMGMwOCJ9.3bGFHjoSXB8yVA3KeQoOIw\";\n\n  //Va servir pour cacher les éléments sur la carte lors de l'impression:\n  printing=false;\n\n  //Sert à afficher le component info-couche pour avoir des infos sur la couche affichée\n  affiching=false;\n\n  /**\n    * Setteur de printing\n    * @param {bool} x\n   */\n  setPrinting(x){this.printing=x;}\n\n  /**\n    * Setteur de affiching\n    * @param {bool} x\n   */\n  setAffiching(x){this.affiching=x;}\n\n  /**\n    * getteur de map\n    * @return {map}\n   */\n  getMap() {return this.map;}\n\n  /**\n    * getteur de mapboxAccessToken\n    * @return {string}\n   */\n  getMapboxAccessToken(){return this.mapboxAccessToken;}\n\n\n  /**\n    * Initie la carte\n   */\n  ngOnInit() {\n\n    //On définie la carte\n    this.map= map('mymap').setView([44.65, 6.12], 5);\n\n  \t//On ajoute la basemap de départ\n    var street_mapbox= tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {\n              attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n              id: 'mapbox.streets',\n              accessToken: this.mapboxAccessToken\n  \t}).addTo(this.map);\n  }\n\n\n  /**\n    * Récupère les données du plugin et les affiche sur la carte\n    * @param {string} nomWorkspace\n    * @param {string} nomCouche\n    * @param {string} couleur\n    * @param {string} or {L.rectangle} filtre\n   */\n  addPlugin(att1,att2,att3,att4){\n\n    //on récupère la couche grâce au plugin et on l'affiche sur la carte\n    const plugin1 = initPlugin(att1,att2,att3,att4);\n    plugin1.addTo(this.map);\n  }\n\n}\n","<!-- Declaration du conteneur de la carte avec l'id \"map\" -->\n<body>\n\n  <div id=\"mymap\"></div>\n\n  <app-menu-outils  *ngIf='!printing'></app-menu-outils>\n\n  <app-layers *ngIf='!printing'></app-layers>\n\n  <app-recherche-selection *ngIf='!printing'></app-recherche-selection>\n\n  <app-module-recherche *ngIf='!printing'></app-module-recherche>\n\n  <app-info-couche [hidden]='!affiching'></app-info-couche>\n\n</body>\n","//Import des Components\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LayersComponent } from './components/layers/layers.component';\nimport { MenuOutilsComponent } from './components/menu-outils/menu-outils.component';\nimport { SousMenuBasemapComponent } from './components/sous-menus-outils/sous-menu-basemap/sous-menu-basemap.component';\nimport { SousMenuContoursTerritComponent } from './components/sous-menus-outils/sous-menu-contours-territ/sous-menu-contours-territ.component';\nimport { ModuleRechercheComponent } from './components/module-recherche/module-recherche.component';\nimport { SousMenuMesureComponent } from './components/sous-menus-outils/sous-menu-mesure/sous-menu-mesure.component';\nimport { RechercheSelectionComponent } from './components/recherche-selection/recherche-selection.component';\nimport { InfoCoucheComponent } from './components/info-couche/info-couche.component';\n\n//Import des APIs\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule }    from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TextFieldModule } from '@angular/cdk/text-field';\n\n//Imports des APIs Material\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\nimport {MatSelectModule} from '@angular/material/select';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatListModule} from '@angular/material/list';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatBadgeModule} from '@angular/material/badge';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LayersComponent,\n    MenuOutilsComponent,\n    SousMenuBasemapComponent,\n    SousMenuContoursTerritComponent,\n    ModuleRechercheComponent,\n    SousMenuMesureComponent,\n    RechercheSelectionComponent,\n    InfoCoucheComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n  \tHttpClientModule,\n    BrowserAnimationsModule,\n  \tMatSliderModule,\n  \tMatExpansionModule,\n  \tMatCardModule,\n  \tMatAutocompleteModule,\n  \tMatTabsModule,\n  \tMatInputModule,\n    MatRadioModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatTooltipModule,\n    MatIconModule,\n    TextFieldModule,\n    MatSelectModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatDividerModule,\n    MatListModule,\n    MatProgressSpinnerModule,\n    MatBadgeModule\n  ],\n  providers: [LayersComponent,InfoCoucheComponent],\n  bootstrap: [AppComponent]\n})\n\n\nexport class AppModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-info-couche',\n  templateUrl: './info-couche.component.html',\n  styleUrls: ['./info-couche.component.css']\n})\n\nexport class InfoCoucheComponent{\n\n\n  /**\n    * Affiche les infos de couches par nom\n    * @param {array} listCouches\n   */\n  afficheCoucheNom(listCouches){\n\n    //On affiche que l'on affiche les couches par nom et on vide le contenu préalable\n    document.getElementById('couche').innerHTML='nom';\n    document.getElementById('aRemplir').innerHTML='';\n\n    //Remplir la légende\n    listCouches.forEach(elem => {\n      document.getElementById('aRemplir').innerHTML+='<div style=\"background-color:' + elem[1]+ ';height:10px; width: 10px;display:inline-block;\"></div> '+elem[0]+'<br>';\n    });\n  }\n\n\n  /**\n    * Affiche les infos de couches par nom\n    * @param {array} listCouches\n   */\n  afficheCoucheType(listCouches){\n\n    //On affiche que l'on affiche les couches par nom et on vide le contenu préalable\n    document.getElementById('couche').innerHTML='type';\n    document.getElementById('aRemplir').innerHTML='';\n\n    //Remplir la légende\n    listCouches.forEach(elem => {\n      document.getElementById('aRemplir').innerHTML+='<div style=\"background-color:' + elem[1]+ ';height:10px; width: 10px;display:inline-block;\"></div> '+elem[0]+'<br>';\n    });\n  }\n\n}\n","<mat-card id=\"cardInfo\">\n\n    <mat-card-content>\n\n      <div id=\"divInfos\">\n\n        <p>Couches affichées par <span id='couche'></span> :</p>\n\n        <div id=\"aRemplir\"></div>\n        \n      </div>\n\n    </mat-card-content>\n\n  </mat-card>\n","\ndeclare const L: any;\nimport './../../../../../node_modules/leaflet-wfst/dist/leaflet-wfst.min.js';\nimport { environment } from './../../../../environments/environment';\n/**\n * Initialize the Leaflet plugin\n */\nexport function initPlugin(typeNS,typeName) {\n  const wfstPointOptions = {\n    crs: L.CRS.EPSG4326,\n    showExisting: true,\n    geometryField: 'geom',\n    url: environment.geoserverWFS,\n    typeNS: typeNS,\n    typeName: typeName,\n    //maxFeatures: 100,\n    opacity: 1,\n    style: (layer) => {\n      // you can use if statemt etc\n      return {\n        color: 'black',\n        weight: 1,\n      };\n    },\n  };\n  return new L.WFST(\n    wfstPointOptions,\n    new L.Format.GeoJSON({\n      crs: L.CRS.EPSG4326,\n      pointToLayer(geoJsonPoint, latlng) {\n        return new L.CircleMarker(latlng, {\n          radius: 10,\n        });\n      },\n    })\n  );\n}\n","import {AfterViewInit, Component, OnInit } from '@angular/core';\nimport { LayersServiceService } from './../../services/layers-service.service';\nimport {ElementRef} from '@angular/core';\nimport { ViewChild } from '@angular/core';\n\n// importer le module xml2js to transformer/parser un string xml en objet javascript \nimport * as xml2js from 'xml2js';\n\n//importer leaflet pour ajouter les couches à la carte \nimport * as L from 'leaflet';\n\n// importer initPlugin pour instancier le plugin leaflet-wfst\nimport { initPlugin } from './conf/wfst-plugin';\n\n// importer environnement pour récuperer les urls du geoserver utilisés\nimport { environment } from './../../../environments/environment';\n\n//importer app root pour récuperer la map\nimport{AppComponent} from './../../app.component'\n\n@Component({\n  selector: 'app-layers',\n  templateUrl: './layers.component.html',\n  styleUrls: ['./layers.component.css']\n})\nexport class LayersComponent implements OnInit {\n  //définir les attributs de la classe \n  public data : any;\n  public xmlString : string;\n  public  array_nom_couches: Array<string>=['A'];\n  public  array_nom_protocol : Array<string>= [];\n  public array_espace : Array<string>= [];\n  public  array_service_LayerSelected : Array<string>= [];\n  public selected = '';\n  public num_selectedlayers = 0;\n  public  array_espace_nom : Array<Object>= [];\n  public layerSelected;\n\n  // definir des attributs qui seront ajoutés aux éléments HTML\n  htmlVariable: string = \"\";\n\n  buttons=[];// bouttons pour les services de publication de chaque couche\n  //=[{disabled: ..., color: '...', label: '...', service:\"..\"}...]\n\n  selectedLayers=[]; // array qui stocke les couches séléctionnées par l'utilisateur et ajoutées à la carte leaflet \n  //=[{name: ..., legendTitle:..., layerObj: ... }...]\n\n  // récuperer les elements HTML dans le .ts\n  @ViewChild(\"layerChoisie\", {read: ElementRef}) layerChoisie: ElementRef;\n  @ViewChild(\"container\") container: ElementRef;\n  @ViewChild(\"buttonWMS\") buttonWMS: ElementRef;\n\n  // on injecte le service layersService et le composant appCompoant dasn le constructeur de la classe pour pouvoir accéder à leurs fcts.\n  constructor(private layersService: LayersServiceService, private appComponent:AppComponent) { }\n\n  ngOnInit(): void {\n    //lors de l'initiation du composant, récuperer xml du CSW sous format texte.\n    //subscribe() permet de manipuler les objets Observable (réponse de la requête)\n    this.data=this.layersService.getXml().subscribe(\n      (data) => {\n        this.xmlString= data;\n        var stringxml=this.xmlString;\n\n        // parser xml et récuperer les 2 arrays : espace:nom_couche / [nom_couche , protocol]\n        var arrays = this.parsing_recup_XML(this.xmlString);\n        var array_espace_nom =  arrays[0];\n        var array_nom_protocol= arrays[1];\n\n        // récuperer seulement le nom des couches\n        var array_nom= this.recup_nom(array_espace_nom)\n        var array_espace=this.recup_espace(array_espace_nom)\n\n        // ajouter les valeurs aux variables de la classe\n        this.array_espace_nom=array_espace_nom;\n        this.array_nom_couches=array_nom;\n        this.array_nom_protocol=array_nom_protocol;\n        this.array_espace=array_espace;\n\n      }\n    )\n  }\n  // fct à utiliser dans le composant recherche\n  // fct pour récuperer un array contenant les noms des couches publiées sur le geoserever\n  recupNomcouche(){\n    return this.array_nom_couches;\n  };\n  // fct pour récuperer un array contenant les espaces des couches publiées sur le geoserever\n  recupNomespace(){;\n    return this.array_espace;\n  }\n  // fct pour récuperer un array contenant les protocoles de publication \n  recupNomprotocol(){\n    return this.array_nom_protocol;\n  }\n\n\n  // fct pour supprimer les couches ajoutées à la carte et dans l'element HTML Légende\n  deleteLayer(layer,name){\n    //supprimer la couche de la carte\n    this.appComponent.getMap().removeLayer(layer);\n    // supprimer la couche de Légende\n    for (let i = 0; i < this.selectedLayers.length; i++ ){\n      if(this.selectedLayers[i].name== name){\n        this.selectedLayers.splice(i, 1);\n        break;\n      }\n    }\n    //modifier le nombre des couches ajoutées à la carte\n    this.num_selectedlayers= this.num_selectedlayers-1\n  }\n\n  // fct qui permet de construire la requete WMS pour une couche\n  WMSLayer(LayerSelected, array_espace_nom){\n    var i: string | number;\n    var str;\n    var espace_travail : string;\n    for (i in array_espace_nom){\n      str= array_espace_nom[i];\n      var array = str.split(\":\");\n      if(array[1]==LayerSelected){\n        espace_travail= array[0];\n      }\n    }\n    // la fct tileLayer.wms de leaflet permer d'ajouter les couches publiées en WMS  \n    var couche = L.tileLayer.wms(environment.geoserverURL+espace_travail+\"/wms?service=WMS\", {\n      layers: espace_travail+ ':' +LayerSelected,// propriété pour définir l'espace et le nom de la couche 'espace:nom'\n      format: 'image/png',// format de réponse \n      transparent: true,\n      attribution: LayerSelected,\n      version: '1.1.0', // version WMS utilisée\n    })\n\n    return couche;\n  }\n\n  //fct pour ajouter une couche WMS à la carte \n  addWMSLayer(LayerSelected, array_espace_nom){\n    var couche = this.WMSLayer(LayerSelected, array_espace_nom).addTo(this.appComponent.getMap());\n    console.log('add WMS layer')\n    return couche;\n  }\n\n  //fct pour ajouter une couche WFS à la carte\n  addWFSLayer(LayerSelected, array_espace_nom){\n    var i: string | number;\n    var str;\n    var espace_travail : string;\n    for (i in array_espace_nom){\n      str= array_espace_nom[i];\n      var array = str.split(\":\");\n      if(array[1]==LayerSelected){\n        espace_travail= array[0];\n      }\n    }\n    //initier le plugin lefalet-wfst pour la couche choisie \n    const plugin = initPlugin(espace_travail,LayerSelected);\n    plugin.addTo(this.appComponent.getMap());\n    return plugin;\n  }\n\n  // selon le choix d'utilisateur on ajoute les couche (choix de service)\n  loadLayer(service){\n    if(service==\"WMS\"){\n      //ajouter la couche\n      var lyr1 =this.addWMSLayer(this.layerSelected,this.array_espace_nom);\n      //créer des elements à ajouter à la légende pour chaque WMS couche ajoutée  \n      var str1= this.layerSelected;\n      var str2= \"WMS :\"+ this.layerSelected;\n      this.num_selectedlayers= this.num_selectedlayers+1\n      this.selectedLayers.push({name: str1, legendTitle:str2, layerObj: lyr1 });\n    }\n    if(service==\"WFS\"){\n      //ajouter la couche\n      var lyr2= this.addWFSLayer(this.layerSelected,this.array_espace_nom);\n      //créer des elements à ajouter à la légende pour chaque WFS couche ajoutée \n      var str1= this.layerSelected;\n      var str2= \"WFS :\"+ this.layerSelected;\n      this.num_selectedlayers= this.num_selectedlayers+1\n      this.selectedLayers.push({name: str1, legendTitle:str2, layerObj: lyr2 });\n    }\n  }\n  // fct pour permettre à l'utilisateur de choisir la couche qu'il veut afficher sur la carte\n  SelectLayer(value, array_nom_protocol){\n    // recreer les bouttons pour la couches sélectionée\n    this.buttons=[];\n    this.layerSelected= value;\n    var array_service=[];\n    var i,j: string | number;\n    var str;\n    // recuperer les services de publication de la couche choisie dans un array\n    for(i in array_nom_protocol){\n      str= array_nom_protocol[i][0];\n      var array = str.split(\":\");\n      console.log(array[1])\n      if(array[1]==value){\n        array_service.push(array_nom_protocol[i][1])\n      }\n\n    }\n    // ajouter les informations aux elemnts HTML\n    this.array_service_LayerSelected=array_service;\n    var ligne1=\"<br> <p>Services de publication disponibles : </p>\"\n    var serviceWMS: boolean;\n    var serviceWFS: boolean;\n    for(j in array_service){\n      if(array_service[i]=\"OGC:WMS\"){\n        serviceWMS= true;\n      }\n      if(array_service[i]=\"OGC:WFS\"){\n        serviceWFS= true;\n      }\n    }\n\n    this.htmlVariable= ligne1;\n    if(serviceWMS){\n      var buttonWMS= this.buttons.push({disabled: false, color: 'primary', label: 'Ajouter couche WMS', service:\"WMS\"});\n\n    }\n    if(serviceWFS){\n      var buttonWFS= this.buttons.push({disabled: false, color: 'primary', label: 'Ajouter couche WFS', service:\"WFS\"});\n\n    }\n\n  }\n\n  // fct pour récuperer les noms des couches publiées.\n  recup_nom(array_espace_nom : Array<string>){\n    var array_nom =[];\n    var str;\n    var i : string | number;\n    for (i in array_espace_nom){\n      str= array_espace_nom[i];\n      var array = str.split(\":\");\n      array_nom.push(array[1]);\n\n    }\n    return array_nom\n  }\n  // fct pour récuperer les espaces des couches publiées.\n  recup_espace(array_espace_nom : Array<string>){\n    var array_espace =[];\n    var str;\n    var i : string | number;\n    for (i in array_espace_nom){\n      str= array_espace_nom[i];\n      var array = str.split(\":\");\n      array_espace.push(array[0]);\n\n    }\n    return array_espace\n  }\n  // fct qui permet de parser lxm et parcourir l'objet JS pour récuperer les metadonnées des couches publiées.\n  parsing_recup_XML(textXML){\n    //définition du parser \n    var parser= new xml2js.Parser(\n      {\n        trim: true,\n        explicitArray: true\n      });\n    // définir les variables\n    var k: string | number;\n    var i: string | number;\n    let array_nom=[]\n    let array_res=[]\n    let array_nom_protocol=[]\n    let inlineRes\n    // parser xml sous format txt\n    parser.parseString(textXML, function (err, result) {\n      // récuperer les objets gmd du CSW \n      var obj_gmd=result['csw:GetRecordsResponse']['csw:SearchResults'][0]['gmd:MD_Metadata'];\n      // récuperer les (noms+espaces) de toutes les couches dans un array\n      for (k in obj_gmd){\n        var nom= obj_gmd[k]['gmd:fileIdentifier'][0]['gco:CharacterString'][0];\n        array_nom.push(nom)\n\n\n        inlineRes= obj_gmd[k]['gmd:distributionInfo'][0]['gmd:MD_Distribution'][0]['gmd:transferOptions'][0]['gmd:MD_DigitalTransferOptions'][0]['gmd:onLine'][0]['gmd:CI_OnlineResource'];\n        array_res.push(inlineRes)\n        // récuperer les protocoles des couches. \n        for(i in inlineRes){\n          var elmnt_array= inlineRes[i];\n          var protocol= elmnt_array['gmd:protocol'][0]['gco:CharacterString'][0];\n          array_nom_protocol.push([nom,protocol]);\n\n        }\n\n      }\n\n  });\n  return [array_nom, array_nom_protocol];\n  }\n\n}\n","<!-- Définir un elmnt mat-accordion de material pour catalogue  -->\n<mat-accordion multi=\"false\">\n\n    <!--  elmnt mat-expansion-panel pour choisir les couches disponibles dans catalogue  -->\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        Catalogue des couches WMS et WFS\n      </mat-expansion-panel-header>\n\n      <div class=\"Catalog\">\n      <p>Couches disponibles :</p>\n      <mat-form-field>\n          <mat-label>Choisir une couche </mat-label>\n          <mat-select #layerChoisie [(value)]=\"selected\">\n            <mat-option *ngFor=\"let layer_name of array_nom_couches\" [value]=\"layer_name\">\n              {{layer_name}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <!-- Afficher la couche selectionnée par l'utilisateur -->\n        <p>You selected: {{selected}}</p>\n        <button mat-raised-button (click)=\"SelectLayer(layerChoisie.value, array_nom_protocol)\"> Choisir cette couche  </button>\n\n        <div [innerHtml]=\"htmlVariable\"  #container></div>\n\n        <!-- Ajouter les bouttons pour choisir les services de publication  -->\n        <ng-container *ngFor=\"let button of buttons\">\n          <button mat-raised-button [disabled]=\"button.disabled\" [color]=\"button.color\" (click)=\"loadLayer(button.service)\" class='butt'>{{button.label}}</button><br> <br>\n        </ng-container>\n\n      </div>\n      \n    </mat-expansion-panel>\n\n    <!-- elmnt mat-expansion-panel pour afficher la légende des couches ajoutées -->\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          Légende\n        </mat-panel-title>\n        \n      </mat-expansion-panel-header>\n\n      <div class=\"layers\">\n      <ng-container *ngFor=\"let layer of selectedLayers\">\n        <mat-list>\n          <mat-list-item>{{layer.legendTitle}}\n            <button mat-mini-fab color=\"warn\" aria-label=\"Example icon button with a delete icon\" (click)=\"deleteLayer(layer.layerObj,layer.name)\">\n              <mat-icon>delete</mat-icon>\n            </button>\n          </mat-list-item>\n          <mat-divider color='white'></mat-divider>\n        </mat-list>\n      </ng-container> \n\n      </div>\n\n    </mat-expansion-panel>\n\n</mat-accordion>\n\n<!-- icone à droite de catalogue pour afficher le nombre de couches disponible sur la carte -->\n<div class=\"divBadge\" matTooltip=\"nombre de couches sur la carte\" matTooltipPosition='right'>\n<mat-icon matBadge={{num_selectedlayers}} matBadgeColor=\"warn\">ballot</mat-icon>\n</div>\n\n  \n  \n","import { Component, OnInit } from '@angular/core';\nimport { AppComponent } from '../../app.component';\n\nimport * as L from 'leaflet';\n\n@Component({\n  selector: 'app-menu-outils',\n  templateUrl: './menu-outils.component.html',\n  styleUrls: ['./menu-outils.component.css']\n})\nexport class MenuOutilsComponent{\n\n\n  /**\n    * Appel des components parents si on en a besoin\n   */\n  constructor(private appComponent: AppComponent) {}\n\n  //variable pour disable les boutons pendant la mesure sur la carte\n  menuDisabled=false;\n\n  //variables d'affichage des sous catégories de boutons\n  sousBoutonsOptionsCarteVisibility=false;\n  sousBoutonsOutilsVisibility=false;\n\n  //variables d'affichage des cards\n  sousMenuBasemapVisibility=false;\n  sousMenuContoursTerritoiresVisibility=false;\n  sousMenuMesureVisibility=false;\n\n  //variables des valeurs des tooltips des boutons\n  toolTipForBasemapBouton;\n  toolTipForContoursTerritoiresBouton;\n  toolTipForMesureBouton;\n  toolTipForImpressionBouton;\n\n  /////////getters pour visibilité des sous menus\n  /**\n    * Getteur de sousMenuBasemapVisibility\n    * @return {bool}\n   */\n  getSousMenuBasemapVisibility(){return this.sousMenuBasemapVisibility;}\n\n  /**\n    * Getteur de sousMenuContoursTerritoiresVisibility\n    * @return {bool}\n   */\n  getSousMenuContoursTerritoiresVisibility(){return this.sousMenuContoursTerritoiresVisibility;}\n\n  /**\n    * Getteur de sousMenuMesureVisibility\n    * @return {bool}\n   */\n  getSousMenuMesureVisibility(){return this.sousMenuMesureVisibility;}\n\n  /////////setters pour visibilité des sous menus\n  /**\n    * Setteur de sousMenuBasemapVisibility\n    * @param {bool} x\n   */\n  setSousMenuBasemapVisibility(x){this.sousMenuBasemapVisibility=x}\n\n  /**\n    * Setteur de sousMenuContoursTerritoiresVisibility\n    * @param {bool} x\n   */\n  setSousMenuContoursTerritoiresVisibility(x){this.sousMenuContoursTerritoiresVisibility=x}\n\n  /**\n    * Setteur de sousMenuMesureVisibility\n    * @param {bool} x\n   */\n  setSousMenuMesureVisibility(x){this.sousMenuMesureVisibility=x;}\n\n\n  /**\n    * Affilie à chaque variable le tooltip correspondant\n   */\n  setTooltip(){\n    this.toolTipForBasemapBouton=\"Choisir le fond de carte\";\n    this.toolTipForContoursTerritoiresBouton=\"Afficher les frontières administratives\";\n    this.toolTipForMesureBouton='Mesurer sur la carte';\n    this.toolTipForImpressionBouton='Impression de la carte';\n  }\n\n\n  /**\n    * Affiche les sous bouttons partie option carte\n    * @param {event} e\n   */\n  afficheConteneurSousBoutonsOptionsCarte(e){\n\n    //On rend visible l'elelement en rendant true la valeur de la variable correspondante\n    this.sousBoutonsOptionsCarteVisibility=!this.sousBoutonsOptionsCarteVisibility;\n\n    //On réinitialise les tooltips au cas ou était sur une autre card\n    this.setTooltip();\n\n    //On ferme tous les cards\n    this.fermeSousMenu();\n\n    //On ferme les sous-boutton sde l'autre categorie et on lui remet style par defaut\n    this.sousBoutonsOutilsVisibility=false;\n    this.setBackgroundColor('conteneur-boutons-outils',false,'');\n\n    //Si on ouvre la sous-cat on grise sinon style par défaut\n    this.setBackgroundColor(e.srcElement.offsetParent.parentElement,this.sousBoutonsOptionsCarteVisibility,'#656565');\n  }\n\n\n  /**\n    * Affiche les sous bouttons partie outils\n    * @param {event} e\n   */\n  afficheConteneurSousBoutonsOutils(e){\n\n    //On rend visible l'elelement en rendant true la valeur de la variable correspondante\n    this.sousBoutonsOutilsVisibility=!this.sousBoutonsOutilsVisibility;\n\n    //On réinitialise les tooltips au cas ou était sur une autre card\n    this.setTooltip();\n\n    //On ferme tous les cards\n    this.fermeSousMenu();\n\n    //On ferme les sous-boutton sde l'autre categorie et on lui remet style par defaut\n    this.setBackgroundColor('conteneur-boutons-options-carte',false,'');\n    this.sousBoutonsOptionsCarteVisibility=false;\n\n    //Si on ouvre la sous-cat on grise sinon style par défaut\n    this.setBackgroundColor(e.srcElement.offsetParent.parentElement,this.sousBoutonsOutilsVisibility,'#656565');\n  }\n\n\n  /**\n    * Affiche les sous-menus\n    * @param {event} e\n   */\n  afficheSousMenu(e){\n    if (e.srcElement.id===\"petite-icone-basemap\") {\n\n      //la variable de visibilité passe à true\n      this.sousMenuBasemapVisibility=!this.sousMenuBasemapVisibility;\n\n      //On réinitialise les tooltips au cas ou était sur une autre card\n      this.setTooltip();\n\n      //On rend vert l'icone et blanche l'autre du sous-menu\n      this.setIconColor('petite-icone-contours-territoires',false,'');\n      this.setIconColor(e.srcElement,this.sousMenuBasemapVisibility,\"#8BE7BA\");\n\n      //Si on ouvre le card, on change le tooltip\n      if (this.sousMenuBasemapVisibility) { this.toolTipForBasemapBouton='Fermer'; }\n\n      //On supprime le gris de l'autre sous boutons de la categorie\n      this.setBackgroundColor('petit-bouton-contours-territoires',false,'');\n\n      //On supprime toutes les autres cards\n      this.sousMenuContoursTerritoiresVisibility=this.sousMenuMesureVisibility=false;\n\n    }\n    if (e.srcElement.id===\"petite-icone-contours-territoires\") {\n\n      //la variable de visibilité passe à true\n      this.sousMenuContoursTerritoiresVisibility=!this.sousMenuContoursTerritoiresVisibility;\n\n      //On réinitialise les tooltips au cas ou était sur une autre card\n      this.setTooltip();\n\n      //On rend vert l'icone et blanche l'autre du sous-menu\n      this.setIconColor('petite-icone-basemap',false,'');\n      this.setIconColor(e.srcElement,this.sousMenuContoursTerritoiresVisibility,\"#8BE7BA\");\n\n      //Si on ouvre le card, on change le tooltip\n      if (this.sousMenuContoursTerritoiresVisibility) { this.toolTipForContoursTerritoiresBouton='Fermer'; }\n\n      //On supprime toutes les autres cards\n      this.sousMenuBasemapVisibility=this.sousMenuMesureVisibility=false;\n\n    }\n    if (e.srcElement.id===\"petite-icone-mesure\") {\n\n      //la variable de visibilité passe à true\n      this.sousMenuMesureVisibility=!this.sousMenuMesureVisibility;\n\n      //On rend vert l'icone\n      this.setIconColor(e.srcElement,this.sousMenuMesureVisibility,\"#8BE7BA\");\n\n      //Si on ouvre le card, on change le tooltip\n      if (this.sousMenuMesureVisibility) { this.toolTipForMesureBouton='Fermer'; }\n\n      //On supprime toutes les autres cards\n      this.sousMenuBasemapVisibility=this.sousMenuContoursTerritoiresVisibility=false;\n\n    }\n    if (e.srcElement.id===\"petite-icone-impression\") {\n\n      //On lance l'impression\n      this.impressionCarte();\n\n      //On réinitialise les tooltips au cas ou était sur une autre card\n      this.setTooltip();\n\n      //On rend blanc l'autre icone du sous-menu\n      this.setIconColor('petite-icone-mesure',false,'');\n\n      //On supprime toutes les autres cards\n      this.sousMenuBasemapVisibility=this.sousMenuContoursTerritoiresVisibility=this.sousMenuMesureVisibility=false;\n    }\n  }\n\n\n  /**\n    * Ferme tous les sous menus\n   */\n  fermeSousMenu(){ this.sousMenuBasemapVisibility=this.sousMenuContoursTerritoiresVisibility=this.sousMenuMesureVisibility=false; }\n\n\n  //Pour definir couleur (bool=true) ou dégriser (bool=true) si c'est evenement ou id d'1 HTML element\n  /**\n    * Définie la couleur ou dégrise si bool=true\n    * Fonctionne pour l'id d'un HTMLElement ou pour un evenement\n    * @param {string} elem\n    * @param {bool} bool\n    * @param {string} color\n   */\n  setBackgroundColor(elem,bool,color){\n    if (typeof elem===\"string\") {\n      if (bool) { document.getElementById(elem).style.backgroundColor=color; }\n      else{ document.getElementById(elem).style.backgroundColor=''; }\n    }\n    else{\n      if (bool) { elem.style.backgroundColor=color; }\n      else{ elem.style.backgroundColor=''; }\n    }\n  }\n\n\n  /**\n    * Définie la couleur ou dégrise si bool=true\n    * Fonctionne pour l'id d'un HTMLElement ou pour un evenement\n    * @param {string} or {HTMLElement} elem\n    * @param {bool} bool\n    * @param {string} color\n   */\n  setIconColor(elem,bool,color){\n    if (typeof elem===\"string\") {\n      if (bool) { document.getElementById(elem).style.color=color; }\n      else{ document.getElementById(elem).style.color=''; }\n    }\n    else{\n      if (bool) { elem.style.color=color; }\n      else{ elem.style.color=''; }\n    }\n  }\n\n\n  /**\n    * Sert dans sous menu basempap et contours territoires donc defini ici\n    * Supprime les couches quo ont l'idLayer\n    * @param {map} map\n    * @param {string} idLayer\n   */\n  deleteLayer(map,idLayer){\n    map.eachLayer(function(layer){\n      if (layer.options.id===idLayer) { map.removeLayer(layer); }\n    });\n  }\n\n\n  /**\n    * Désactive le menu lorsqu'on mesure sur la carte\n    * @param {bool} bool\n   */\n  disableMenu(bool){\n    var menu=document.getElementById('conteneur-boutons-du-menu-outils');\n    if (bool) { menu.classList.add('non-clickable'); }\n    else{ menu.classList.remove('non-clickable'); }\n    this.menuDisabled=bool;\n  }\n\n\n  ///IMPRESSION DE LA CARTE///\n\n  /**\n    * Lance l'impression de la carte\n   */\n  impressionCarte(){\n    this.hideMenu(true);\n    setTimeout(() => {\n      window.print();\n      this.hideMenu(false);\n    }, 1);\n  }\n\n  /**\n    * Cache les éléments au dessus de la carte lors de l'impression\n    * @param {bool} x\n   */\n  hideMenu(x){\n    var elem=document.getElementsByClassName('leaflet-top leaflet-left')[0] as HTMLElement;\n    if (x) {elem.style.visibility='hidden';}\n    else{ elem.style.visibility='visible';}\n    this.appComponent.setPrinting(x);\n  }\n\n  ///FIN IMPRESSION DE LA CARTE///\n\n\n}\n","\n<app-sous-menu-basemap *ngIf='sousMenuBasemapVisibility'></app-sous-menu-basemap>\n\n<app-sous-menu-contours-territ *ngIf='sousMenuContoursTerritoiresVisibility'></app-sous-menu-contours-territ>\n\n<app-sous-menu-mesure *ngIf='sousMenuMesureVisibility'></app-sous-menu-mesure>\n\n<div id=\"conteneur-boutons-du-menu-outils\">\n\n  <div id=\"conteneur-boutons-options-carte\">\n\n    <button mat-icon-button id=\"grand-bouton-options-carte\" class=\"grand-bouton\" matTooltip=\"Options de carte\" matTooltipPosition='left' [disabled]='menuDisabled'>\n      <mat-icon aria-hidden=\"true\" id='grande-icone-options-carte' (click)='afficheConteneurSousBoutonsOptionsCarte($event)' class=\"grande-icone\" >map</mat-icon>\n    </button>\n\n    <div id=\"conteneur-sous-boutons-options-carte\" *ngIf='sousBoutonsOptionsCarteVisibility' class=\"conteneur-boutons-sous-categorie\">\n\n      <button mat-icon-button id=\"petit-bouton-basemap\" class=\"petit-bouton\" [matTooltip]=\"toolTipForBasemapBouton\" matTooltipPosition='left'>\n        <mat-icon aria-hidden=\"true\" id='petite-icone-basemap' class=\"petite-icone\" (click)='afficheSousMenu($event)'>layers</mat-icon>\n      </button>\n\n      <button mat-icon-button id=\"petit-bouton-contours-territoires\" class=\"petit-bouton\" [matTooltip]=\"toolTipForContoursTerritoiresBouton\" matTooltipPosition='left'>\n        <mat-icon aria-hidden=\"true\" id='petite-icone-contours-territoires' class=\"petite-icone\" (click)='afficheSousMenu($event)'>emoji_flags</mat-icon>\n      </button>\n\n    </div>\n  </div>\n\n  <div id=\"conteneur-boutons-outils\">\n\n    <button mat-icon-button id=\"grand-bouton-outils\" class=\"grand-bouton\" matTooltip=\"Outils\" matTooltipPosition='left' [disabled]='menuDisabled'>\n      <mat-icon aria-hidden=\"true\" id='grande-icone-outils' (click)='afficheConteneurSousBoutonsOutils($event)' class=\"grande-icone\">build</mat-icon>\n    </button>\n\n    <div id=\"conteneur-sous-boutons-outils\" *ngIf='sousBoutonsOutilsVisibility' class=\"conteneur-boutons-sous-categorie\">\n\n      <button mat-icon-button id=\"petit-bouton-mesure\" class=\"petit-bouton\" [matTooltip]=\"toolTipForMesureBouton\" matTooltipPosition='left' [disabled]='menuDisabled'>\n        <mat-icon aria-hidden=\"true\" id='petite-icone-mesure' class=\"petite-icone\" (click)='afficheSousMenu($event)'>square_foot</mat-icon>\n      </button>\n\n      <button mat-icon-button id=\"petit-bouton-impression\" class=\"petit-bouton\" [matTooltip]=\"toolTipForImpressionBouton\" matTooltipPosition='left' [disabled]='menuDisabled'>\n        <mat-icon aria-hidden=\"true\" id='petite-icone-impression' class=\"petite-icone\" (click)='afficheSousMenu($event)'>print</mat-icon>\n      </button>\n    </div>\n  </div>\n</div>\n","import {Component} from '@angular/core';\nimport { AppComponent } from '../../app.component';\nimport {FormControl} from '@angular/forms';\nimport {Observable} from 'rxjs';\nimport {map, startWith, filter} from 'rxjs/operators';\nimport {LayersComponent} from '../../components/layers/layers.component';\nimport { LayersServiceService } from './../../services/layers-service.service';\n\nimport * as L from 'leaflet';\n\n@Component({\n  selector: 'app-module-recherche',\n  templateUrl: './module-recherche.component.html',\n  styleUrls: ['./module-recherche.component.css']\n})\nexport class ModuleRechercheComponent{\n\n  public xmlString : string;\n\n  //Variables qui vont suivre si l'input de l'utilisateur fait partie du catalogue de couches\n  public presentN: boolean= false;\n  public present: boolean=false;\n\n  //Variables où on va stocker les différents noms de couches, protocoles et espace de travail\n  public  array_nom_protocol : Array<string>= [];\n  public array_nom_couches: Array<string>= [];\n  public array_nom_types: Array<string>= [];\n\n  //Booleens qui vont déterminer l'affichage d'un message d'information spécifique à la recherche par attribut\n  public info:boolean=true;\n  public infoCard=false;\n\n  public validerDisa=false;\n  public boutSupprDisa=true;\n\n\n  //Si on veut utiliser les fonctions de appComponent :\n  constructor(private appComponent: AppComponent,private layersComponent: LayersComponent,private layersService: LayersServiceService) {\n\n  }\n  recup=this.layersService.getXml().subscribe(\n    (recup) => {\n      this.xmlString= recup;\n      var stringxml=this.xmlString;\n      \n      // parser xml et récuperer les 2 arrays : espace:nom_couche / [nom_couche , protocol]\n      var arrays = this.layersComponent.parsing_recup_XML(this.xmlString)\n      var nom_couche=arrays[0];\n\n      // var nom_couches=this.recup_nom(nom_couche);\n      var nom_couches=[];\n      var nom_types=[];\n      var str;\n      var i : string | number;\n\n      /**\n       * Pour la constitution du catalogue, on classe les couches en deux classes 'couches' et\n       *'types', qui correspondent à l'espace de travail auquel elles appartiennent\n       */\n      for (i in nom_couche){\n        str= nom_couche[i];\n        var array = str.split(\":\");\n        if (array[0]=='couches'){\n          nom_couches.push(array[1]);\n        }\n        else if(array[0]=='types'){\n          nom_types.push(array[1]);\n        }\n      }\n\n      //On stocke les différentes valeurs du catalogue de couches dans les variables définies au départ\n      this.array_nom_protocol=nom_couche;\n      this.array_nom_couches=nom_couches;\n      this.array_nom_types=nom_types;\n\n      //ici pour la recherche par attribut, les options vont être les couches d'espace de travail 'types'\n      var options= this.array_nom_types;\n\n      //Portion de code qui permet que la liste des options d'input évolue au fur et à mesure de l'input de l'utilisateur\n      this.filteredOptions = this.myControl.valueChanges\n      .pipe(\n        startWith(''),\n        map(value => { const filterValue = value.toLowerCase();\n\n          //On teste à chaque fois que l'input change si l'input actuel fait partie du catalogue de couches\n          if (options.includes(value)){\n            this.present=true;\n          }\n          else{\n            this.present=false;\n          }\n\n          return options.filter(option => option.toLowerCase().includes(filterValue));\n\n        }),\n      );\n\n      //Procédure analogue pour la recherche par nom avec les couches 'couches'\n      var optionsN: string[] = this.array_nom_couches;\n      this.filteredOptionsN = this.myControlN.valueChanges\n      .pipe(\n        startWith(''),\n        map(value => { const filterValue = value.toLowerCase();\n          if (optionsN.includes(value)){\n            this.presentN=true;\n          }\n          else{\n            this.presentN=false;\n          }\n          return optionsN.filter(option => option.toLowerCase().includes(filterValue));\n\n        }),\n      );\n    })\n\n  //formControl qui suit l'input de l'utilisateur dans recherche par attribut\n  myControl = new FormControl();\n\n  filteredOptions: Observable<string[]>;\n\n  //formControl qui suit l'input de l'utilisateur dans recherche par nom\n  myControlN = new FormControl();\n  filteredOptionsN: Observable<string[]>;\n\n  /**\n    * Getteur de array_nom_couches\n    * @return {string[]}\n   */\n  public getArray() {\n    return this.array_nom_couches;\n  }\n\n  /**\n    * fonction qui sert à récuperer seulement le nom de la couche dans un array qui contient\n    * espace:nom couche\n    * @return {string[]}\n   */\n  recup_nom(array_espace_nom : Array<string>){\n    var array_nom =[];\n    var str;\n    var i : string | number;\n    for (i in array_espace_nom){\n      str= array_espace_nom[i];\n      var array = str.split(\":\");\n      array_nom.push(array[1]);\n\n    }\n    return array_nom\n  }\n\n    /**\n    * fonction qui sert à récuperer seulement l'espace de travail de la couche dans un array\n    *  qui contient espace:nom couche\n    * @return {string[]}\n   */\n  recup_espace(array_espace_nom : Array<string>){\n    var array_espace =[];\n    var str;\n    var i : string | number;\n    for (i in array_espace_nom){\n      str= array_espace_nom[i];\n      var array = str.split(\":\");\n      array_espace.push(array[0]);\n\n    }\n    return array_espace\n  }\n\n\n  /**\n    * Fait la selection et recherche la couche (pour type)\n    * @param {string[]} value\n    * @param {bool} present\n   */\n  recherche(value:string[],present){\n\n    if (!present){ alert('Cette couche est inconnue'); }\n\n    else{\n\n      //On affiche la popup qui nous dit de selectionner une zone\n      this.infoCard=true;\n\n      //necessaire pour y faire appel dans les fonctions:\n      var self=this;\n      var couche=value;\n\n      //On récupère la carte\n      var carte=this.appComponent.getMap();\n\n      //On récupère des éléments HTML\n      var carteContenant=document.getElementById('mymap');\n      var boutValider=document.getElementById('valide1');\n      var iconeSuppr=document.getElementById('iconeSuppr');\n\n      //Définition des variables\n      var oneCorner;\n      var twoCorner;\n      var bounds;\n      var areaRect;\n      var areaRectHa;\n\n      //On doit iniialiser ces variables au hasard et elles seront supprimés:\n      var rect=L.rectangle([[1,1],[1,1]], {color:\"#ff7800\", weight:0.8});\n      var rectMove=L.rectangle([[1,1],[1,1]], {color:\"#ff7800\", weight:1});\n\n      //On active la possibilité de draguer pour dessiner\n      carte.on('mousedown', setOneCorner);\n      carte.on('mouseup', setTwoCorner);\n\n      //Pour plus de précision lors du drag\n      carteContenant.style.cursor='crosshair';\n      carte.dragging.disable();\n\n\n      /**\n        * Définie le coint haut gauche du rectangle de selection\n        * @param {event} e\n       */\n      function setOneCorner(e){\n\n        oneCorner = e.latlng;\n\n        //On va dessiner un rectangle au mouvement de la souris pour avoir une idee de ce que on est en train de dessiner\n        carte.on('mousemove',onMove);\n      }\n\n\n      /**\n        * Définie le coint bas droit du rectangle de selection et le dessine\n        * @param {event} e\n       */\n      function setTwoCorner(e){\n\n        //On supprime le derier rectangle lors du mouvement de souris\n        rectMove.remove();\n\n        //On stop l'écoute sur la carte car la selection est finie\n        carte.off('mousedown', setOneCorner);\n        carte.off('mouseup', setTwoCorner);\n        carte.off('mousemove',onMove);\n\n        //On définie le coint bas droit du rectangle et on le dessine\n        twoCorner = e.latlng;\n        bounds = L.latLngBounds([oneCorner, twoCorner]);\n        rect=L.rectangle(bounds, {color:\"#ff7800\", fill:false,weight:1}).addTo(carte);\n\n        //On calcule l'aire du rectangle selectionné\n        let sw=bounds.getSouthWest();\n        let nw=bounds.getNorthWest();\n        let se=bounds.getSouthEast();\n        let ne=bounds.getNorthEast();\n        areaRect=sw.distanceTo(nw)*se.distanceTo(ne);\n        areaRectHa=areaRect/10000;\n\n        if (areaRectHa<100) {\n\n          //On supprime le rectangle et on réessaie\n          rect.remove();\n          alert('Selection trop petite, réessayez');\n          self.recherche(couche,present);\n        }\n\n        else if (areaRectHa>10000000) {\n\n          //On supprime le rectangle et on réessaie\n          rect.remove();\n          alert('Selection trop grande, réessayez');\n          self.recherche(couche,present);\n        }\n\n        else{\n          //On revient aux reglages carte d'origine\n          carte.dragging.enable();\n          carteContenant.style.cursor='grab';\n\n          //On demande au plugin d'afficher la couche\n          self.addPlug(couche,rect);\n\n          //On supprime la popup info\n          self.infoCard=false;\n\n          //On active la bouton supprimer couche\n          self.boutSupprDisa=false;\n          iconeSuppr.classList.remove('butt-disabled');\n          iconeSuppr.classList.add('butt-enable');\n        }\n\n      }\n\n\n      /**\n        * Dessine le rectange intermediaire lors du mvt de la souris\n        * @param {event} e\n       */\n      function onMove(e) {\n        rectMove.remove();\n        rectMove=L.rectangle([oneCorner, e.latlng], {color:\"#ff7800\", weight:1}).addTo(carte);\n      }\n\n    }\n\n\n  }\n\n\n  /**\n    * Supprime la selection\n   */\n  deleteSelection() {\n    var carte=this.appComponent.getMap();\n    carte.eachLayer(function(layer){\n      if (layer.options.geometryField) { layer.remove();  }\n      if (layer.options.color) { layer.remove();  }\n    });\n  }\n\n\n  /**\n    * Demande au plugin d'afficher la couche\n    * @param {string[]} value\n    * @param {L.rectangle} filtre\n   */\n  public addPlug(value:string[],filtre) {\n      this.appComponent.addPlugin('types',this.myControl.value.toLowerCase(),'red',filtre);\n  }\n\n\n  /**\n    * Si la couche existe, alors on demande au plugin d'afficher la couche\n    * @param {string[]} value\n    * @param {bool} present\n   */\n  public addPlugN(value:string[],present){\n    if(present){ this.appComponent.addPlugin('couches',this.myControlN.value.toLowerCase(),'red','sans filtre'); }\n    else{ alert('Cette couche est inconnue'); }\n  }\n\n\n  /**\n    * change le focus de mat tab group\n   */\n  public reverseInfo(){\n    this.info=!this.info;\n  }\n\n\n}\n","<mat-card>\n\n  <mat-card-header>\n    <mat-card-title>\n      Module de recherche\n    </mat-card-title>\n  </mat-card-header>\n\n\t<mat-tab-group class=\"barre\" (focusChange)='reverseInfo()'>\n\n\t  <mat-tab id=\"rechercheattribut\" label=\"Recherche par attribut\">\n\n\t\t<form id=\"form-rechercheAttribut\">\n\t\t\t<mat-form-field class=\"example-full-width\">\n        <mat-label>Choisir un attribut:</mat-label>\n\n  \t\t\t<input id='input1'\n\t\t\t  \t\t   type=\"text\"\n    \t\t\t\t\t placeholder=\"Ex: marin\"\n    \t\t\t\t\t aria-label=\"Attribut\"\n    \t\t\t\t\t matInput\n    \t\t\t\t\t [formControl]=\"myControl\"\n    \t\t\t\t\t [matAutocomplete]=\"auto\">\n\n    \t\t<mat-autocomplete #auto=\"matAutocomplete\" >\n          <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">{{option}}</mat-option>\n\t\t\t  </mat-autocomplete>\n\n\t\t\t </mat-form-field>\n       <button id='valide1' mat-raised-button color='black' (click)=\"recherche(['zn','nat','inpg','ep'],present)\" [disabled]='(myControl.value==null || myControl.value==\"\") '>Valider</button>\n\t\t </form>\n\n\t  </mat-tab>\n\n      <mat-tab id=\"recherchenom\" label=\"Recherche par nom\" [disabled]='infoCard'>\n\n        <form id=\"form-rechercheAttribut\">\n          <mat-form-field class=\"examples-full-width\">\n            <mat-label>Entrez le nom de la couche:</mat-label>\n\n            <input type=\"text\"\n            \t\t\t placeholder=\"Ex: marine\"\n            \t\t\t aria-label=\"Nom\"\n            \t\t\t matInput\n            \t\t\t [formControl]=\"myControlN\"\n            \t\t\t [matAutocomplete]=\"auto1\">\n\n            <mat-autocomplete #auto1=\"matAutocomplete\">\n              <mat-option *ngFor=\"let optionN of filteredOptionsN | async\" [value]=\"optionN\"> {{optionN}} </mat-option>\n\t\t        </mat-autocomplete>\n\t\t      </mat-form-field>\n\n\t\t      <button id='valide2' mat-raised-button color='black' (click)=\"addPlugN(array_nom_couches,presentN)\" [disabled]='(myControlN.value==null || myControlN.value==\"\") '> Valider </button>\n\t\t    </form>\n\t    </mat-tab>\n\n   </mat-tab-group>\n\n</mat-card>\n\n<mat-card *ngIf='infoCard && info' id=\"infoCard\">\n  <mat-card-content>\n    <p>Info : Veuillez selectionner une zone où afficher la couche</p>\n  </mat-card-content>\n</mat-card>\n\n<div id=\"divBoutSuppr\">\n  <button mat-icon-button id=\"boutSuppr\" matTooltip=\"Supprimer la couche\" matTooltipPosition='right' [disabled]='boutSupprDisa'>\n    <mat-icon aria-hidden=\"true\" id=\"iconeSuppr\" class=\"butt-disabled\" (click)='deleteSelection()'>delete</mat-icon>\n  </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { AppComponent } from \"../../app.component\";\nimport { InfoCoucheComponent } from \"../info-couche/info-couche.component\";\n\nimport * as L from 'leaflet';\n\n@Component({\n  selector: 'app-recherche-selection',\n  templateUrl: './recherche-selection.component.html',\n  styleUrls: ['./recherche-selection.component.css']\n})\nexport class RechercheSelectionComponent implements OnInit {\n\n  constructor(private appComponent: AppComponent, private infoCoucheComponent: InfoCoucheComponent) { }\n\n  selectionning=false;\n  boutRechercheDisabled=true;\n  hiddenButRecherche=true;\n\n  ngOnInit(): void {\n\n    var listCouchesTypes=[['zn','red'],['nat','black'],['inpg','green'],['ep','yellow']];\n    var listCouchesNoms=[['baseexp_stations','red'],['baseexp_traits','black'],['donneesstations_languedocroussillon','green'],['metrop_znieff1','yellow'],['metrop_znieff2','purple']];\n\n    var self=this;\n    var app=this.appComponent;\n    var info=this.infoCoucheComponent;\n\n    var carte=this.appComponent.getMap();\n\n    var buttCommencer=document.getElementById('boutCommencer');\n    var buttRechercherType=document.getElementById('boutRechercherType');\n    var buttRechercherNom=document.getElementById('boutRechercherNom');\n\n    var carteContenant=document.getElementById('mymap');\n\n    var choice=false;\n\n    var listePoints=[];\n    var listLatLng=[];\n\n    var oneCorner;\n    var twoCorner;\n\n    var bounds;\n    var rect=L.rectangle([[1,1],[1,1]], {color:\"#ff7800\", weight:0.8});\n    var rectMove=L.rectangle([[1,1],[1,1]], {color:\"#ff7800\", weight:1});\n    var areaRect;\n    var areaRectHa;\n\n    L.DomEvent.on(buttCommencer, 'click',selectionner, this);\n\n\n    function selectionner() {\n\n      choice=!choice;\n\n      if (choice) {\n        carte.on('mousedown', setOneCorner);\n        carte.on('mouseup', setTwoCorner);\n        carte.dragging.disable();\n        buttCommencer.innerHTML='Annuler la selection';\n        buttCommencer.classList.add('butt-red');\n        buttCommencer.classList.remove('butt-green');\n        carteContenant.style.cursor='crosshair';\n        this.hiddenButRecherche=false;\n      }\n      else{\n        deleteSelection();\n        carte.dragging.enable();\n        carte.off('mousedown', setOneCorner);\n        carte.off('mouseup', setTwoCorner);\n        self.boutRechercheDisabled=true;\n        buttCommencer.innerHTML='Commencer la selection';\n        buttCommencer.classList.add('butt-green');\n        buttCommencer.classList.remove('butt-red');\n\n        carteContenant.style.cursor='grab';\n        this.hiddenButRecherche=true;\n      }\n    }\n\n\n    function setOneCorner(e){\n\n      oneCorner = e.latlng;\n      carte.on('mousemove',onMove);\n    }\n\n\n    function setTwoCorner(e){\n\n      rectMove.remove();\n\n      carte.off('mousemove',onMove);\n      carte.off('mousedown', setOneCorner);\n      carte.off('mouseup', setTwoCorner);\n\n      carte.dragging.enable();\n      carteContenant.style.cursor='grab';\n\n      twoCorner = e.latlng;\n      bounds = L.latLngBounds([oneCorner, twoCorner]);\n\n      rect=L.rectangle(bounds, {color:\"#ff7800\", fill:false,weight:1}).addTo(carte);\n\n      let sw=bounds.getSouthWest();\n      let nw=bounds.getNorthWest();\n      let se=bounds.getSouthEast();\n      let ne=bounds.getNorthEast();\n      areaRect=sw.distanceTo(nw)*se.distanceTo(ne);\n      areaRectHa=areaRect/10000;\n      if (areaRectHa<100) { alert('Selection trop petite'); }\n      else if (areaRectHa>2000000) { alert('Selection trop grande'); }\n      else{ self.boutRechercheDisabled=false; }\n\n      L.DomEvent.on(buttRechercherType, 'click',rechercherType, this);\n\n      L.DomEvent.on(buttRechercherNom, 'click',rechercherNom, this);\n\n    }\n\n    function onMove(e) {\n      rectMove.remove();\n      rectMove=L.rectangle([oneCorner, e.latlng], {color:\"#ff7800\", weight:1}).addTo(carte);\n    }\n\n\n    function deleteSelection() {\n      app.setAffiching(false);\n      carte.eachLayer(function(layer){\n        if (layer.options.geometryField) { layer.remove();  }\n      });\n      rect.remove();\n    }\n\n\n    function rechercherType() {\n\n      app.setAffiching(true);\n      info.afficheCoucheType(listCouchesTypes);\n\n      self.boutRechercheDisabled=true;\n\n      listCouchesTypes.forEach(elem => {\n        app.addPlugin('types',elem[0],elem[1],rect);\n      });\n\n    }\n\n\n    function rechercherNom() {\n\n      app.setAffiching(true);\n      info.afficheCoucheNom(listCouchesNoms);\n\n      self.boutRechercheDisabled=true;\n\n      listCouchesNoms.forEach(elem => {\n        app.addPlugin('couches',elem[0],elem[1],rect);\n      });\n\n    }\n\n\n\n  }\n\n}\n","<mat-card id='card-recherche'>\n  <mat-card-header>\n    <div></div>\n    <mat-card-title>Recherche par selection</mat-card-title>\n  </mat-card-header>\n  <mat-card-content>\n    <div>\n      <button mat-raised-button type=\"button\" id=\"boutCommencer\" class='butt-green'>Commencer la mesure</button>\n    </div>\n    <div [hidden]='hiddenButRecherche' id=\"divRecherche\">\n      <button mat-raised-button type=\"button\" id=\"boutRechercherType\"  [disabled]='boutRechercheDisabled'>Rechercher par type</button>\n      <br><button mat-raised-button type=\"button\" id=\"boutRechercherNom\" [disabled]='boutRechercheDisabled'>Rechercher par nom</button>\n    </div>\n  </mat-card-content>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { MenuOutilsComponent } from \"../../menu-outils/menu-outils.component\";\nimport { AppComponent } from \"../../../app.component\";\n\nimport * as L from 'leaflet';\n\n@Component({\n  selector: 'app-sous-menu-basemap',\n  templateUrl: './sous-menu-basemap.component.html',\n  styleUrls: ['./sous-menu-basemap.component.css']\n})\nexport class SousMenuBasemapComponent implements OnInit{\n\n\n  /**\n    * Appel des components parents\n    * @param {component} appComponent\n    * @param {component} menuOutilsComponent\n   */\n  constructor(private appComponent: AppComponent,private menuOutilsComponent: MenuOutilsComponent) {}\n\n\n  //variable de classe contenant l'id de la basempap affichée\n  checkedBasemap;\n\n\n  /**\n    * Trouve quelle basempap est affichee\n   */\n  ngOnInit(){\n\n    //On récupère la carte et définie la variable qui contiendra l'id de la basemaps\n    var map=this.appComponent.getMap();\n    var quelbase;\n\n    //Si la couche affichée n'est pas une frontière on récupère son id\n    map.eachLayer(function(layer){\n      if (layer.options.id && (layer.options.id!='depFr' && layer.options.id!='regFr')) { quelbase=layer.options.id; }\n    });\n    this.checkedBasemap=quelbase;\n  }\n\n\n  /**\n    * Change de basemap au click sur un radio bouton\n    * @param {event} e\n   */\n  changeBasemap(e){\n\n    //On définie toutes les basemaps\n    var street_mapbox= L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {\n              attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n              id: 'mapbox.streets',\n              accessToken: this.appComponent.getMapboxAccessToken()\n    });\n    var light = L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {\n              id: 'mapbox.light',\n              attribution: 'Map data &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors, ' + '<a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, ' +'Imagery © <a href=\"https://mapbox.com\">Mapbox</a>',\n              accessToken: this.appComponent.getMapboxAccessToken()\n    });\n    var OSM= L.tileLayer(\"http://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\",{\n              id : 'osm',\n              attribution : '<a href=\"https://www.openstreetmap.org/\">Open Street Map</a>'\n    });\n    var streets_osm = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',{\n              id : 'streets.osm',\n              attribution : '<a href=\"https://www.openstreetmap.org/\">Open Street Map</a>'\n    });\n    var World_topo_Map = new L.TileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/' + 'World_Topo_Map/MapServer/tile/{z}/{y}/{x}',{\n              id : 'world.topo.map',\n              attribution : '<a href=\"https://www.esri.com/fr-fr/home\">ESRI</a>'\n    });\n    var World_Imagery = new L.TileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/' + 'World_Imagery/MapServer/tile/{z}/{y}/{x}',{\n              id : 'world.imagery',\n              attribution : '<a href=\"https://www.esri.com/fr-fr/home\">ESRI</a>'\n    });\n    var World_Shaded_Relief = new L.TileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/' +'World_Shaded_Relief/MapServer/tile/{z}/{y}/{x}',{\n              id : 'world.shaded.relief',\n              maxZoom : 13,\n              attribution : '<a href=\"https://www.esri.com/fr-fr/home\">ESRI</a>'\n    });\n    var World_Terrain_Base = new L.TileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/' + 'World_Terrain_Base/MapServer/tile/{z}/{y}/{x}',{\n              id : 'world.terrain.base',\n              maxZoom : 9,\n              attribution : '<a href=\"https://www.esri.com/fr-fr/home\">ESRI</a>'\n    });\n    var World_Street_Map = new L.TileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/' + 'World_Street_Map/MapServer/tile/{z}/{y}/{x}',{\n              id : 'world.street.map',\n              attribution : '<a href=\"https://www.esri.com/fr-fr/home\">ESRI</a>'\n    });\n\n    //On les range dans un tableau\n    var basemaps=[\n      {   \"varlayer\" : street_mapbox,\n          \"id\" : \"mapbox.streets\",\n          \"label\" : \"Mapbox Streets\"\n      },\n      {   \"varlayer\" : light,\n          \"id\" : \"mapbox.light\" ,\n          \"label\" : \"Mapbox Light\"\n      },\n      {   \"varlayer\" : OSM,\n          \"id\" : \"osm\",\n          \"label\" : \"OSM Standard\"\n      },\n      {   \"varlayer\" : streets_osm,\n          \"id\" : \"streets.osm\" ,\n          \"label\" : \"OSM Streets\"\n      },\n      {   \"varlayer\" : World_topo_Map,\n          \"id\" : \"world.topo.map\" ,\n          \"label\" : \"ESRI World topo Map\"\n      },\n      {   \"varlayer\" : World_Imagery,\n          \"id\" : \"world.imagery\" ,\n          \"label\" : \"ESRI World Imagery\"\n      },\n      {   \"varlayer\" : World_Shaded_Relief ,\n          \"id\" : \"world.shaded.relief\" ,\n          \"label\" : \"ESRI World Shaded Relief \"\n      },\n      {   \"varlayer\" : World_Terrain_Base ,\n          \"id\" : \"world.terrain.base\" ,\n          \"label\" : \"ESRI World Terrain Base \"\n      },\n      {   \"varlayer\" : World_Street_Map ,\n          \"id\" : \"world.street.map\" ,\n          \"label\" : \"ESRI World Street Map\"\n      }];\n\n    //Selon le bouton clické, on supprime toutes les autres basemap et on l'ajoute\n    for (let i = 0; i < basemaps.length; i++) {\n\n      this.menuOutilsComponent.deleteLayer(this.appComponent.getMap(),basemaps[i]['id']);\n      \n      if (basemaps[i]['id']===e.source.id) { basemaps[i]['varlayer'].addTo(this.appComponent.getMap()); }\n    }\n\n  }\n\n\n}\n","<mat-card id='card-basemap'>\n\n    <mat-card-header>\n      <mat-card-title>Fond de carte</mat-card-title>\n    </mat-card-header>\n\n    <div class=\"conteneur-radio-boutons-basemaps\">\n      <mat-radio-group>\n\n        <p class=\"baseMap-category\"><strong>Mapbox :</strong></p>\n\n        <mat-radio-button id='mapbox.streets' value='mapbox.streets' class=\"radio-button-above\" [checked]=\"checkedBasemap=='mapbox.streets'\" (change)='changeBasemap($event)'>Mapbox Streets</mat-radio-button><br>\n\n        <mat-radio-button value=\"mapbox.light\" id='mapbox.light'  [checked]=\"checkedBasemap=='mapbox.light'\"  (change)='changeBasemap($event)'>Mapbox Light</mat-radio-button>\n\n\n        <p class=\"baseMap-category\" id=\"OSM\"><strong>Open Street Map :</strong></p>\n\n        <mat-radio-button value=\"osm\" id='osm' class=\"radio-button-above\" [checked]=\"checkedBasemap=='osm'\" (change)='changeBasemap($event)'>OSM Standard</mat-radio-button><br>\n\n        <mat-radio-button value=\"streets.osm\" id='streets.osm' [checked]=\"checkedBasemap=='streets.osm'\" (change)='changeBasemap($event)'>OSM Streets</mat-radio-button>\n\n\n        <p class=\"baseMap-category\" id=\"ESRI\"><strong>ESRI :</strong></p>\n\n        <mat-radio-button value=\"world.topo.map\" id='world.topo.map' class=\"radio-button-above\" [checked]=\"checkedBasemap=='world.topo.map'\" (change)='changeBasemap($event)'>ESRI World topo Map</mat-radio-button><br>\n\n        <mat-radio-button value=\"world.imagery\" id='world.imagery' class=\"radio-button-above\" [checked]=\"checkedBasemap=='world.imagery'\" (change)='changeBasemap($event)'>ESRI World Imagery</mat-radio-button><br>\n\n        <mat-radio-button value=\"world.shaded.relief\" id='world.shaded.relief' class=\"radio-button-above\" [checked]=\"checkedBasemap=='world.shaded.relief'\" (change)='changeBasemap($event)'>ESRI World Shaded Relief</mat-radio-button><br>\n\n        <mat-radio-button value=\"world.terrain.base\" id='world.terrain.base' class=\"radio-button-above\" [checked]=\"checkedBasemap=='world.terrain.base'\" (change)='changeBasemap($event)'>ESRI World Terrain Base</mat-radio-button><br>\n\n        <mat-radio-button value=\"world.street.map\" id='world.street.map' [checked]=\"checkedBasemap=='world.street.map'\" (change)='changeBasemap($event)'>ESRI World Street Map</mat-radio-button>\n\n      </mat-radio-group>\n    </div>\n\n  </mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { MenuOutilsComponent } from \"../../menu-outils/menu-outils.component\";\nimport { AppComponent } from \"../../../app.component\";\nimport { environment } from '../../../../environments/environment';\n\nimport * as L from 'leaflet';\n\n@Component({\n  selector: 'app-sous-menu-contours-territ',\n  templateUrl: './sous-menu-contours-territ.component.html',\n  styleUrls: ['./sous-menu-contours-territ.component.css']\n})\nexport class SousMenuContoursTerritComponent implements OnInit{\n\n  /**\n    * Appel des components parents\n    * @param {component} appComponent\n    * @param {component} menuOutilsComponent\n   */\n  constructor(private appComponent: AppComponent,private menuOutilsComponent: MenuOutilsComponent) {}\n\n\n  //variables de classes qui définissent si les checkobox sont cochées ou non\n  checkedReg;\n  checkedDep;\n\n\n  /**\n    * Trouve quel contour est affiché à l'affiche du sous-menu\n   */\n  ngOnInit(){\n\n    //On récupère la carte et définie la liste des id des frontières affichées\n    var map=this.appComponent.getMap();\n    var quelcont=[];\n\n    //On remplit la liste avec les id des frontières affichées\n    map.eachLayer(function(layer){\n      if (layer.options.id=='regFr' || layer.options.id=='depFr') { quelcont.push(layer.options.id); }\n    });\n\n    //On check les check box necessaires selon les frontières affichées\n    this.checkedDep=this.checkedReg=false;\n    quelcont.forEach(elem => {\n      if (elem=='depFr') {this.checkedDep=true;}\n      if (elem=='regFr') {this.checkedReg=true;}\n    });\n  }\n\n\n  /**\n    * Affiche les frontières des dép et rég\n    * @param {event} e\n   */\n  afficheFrontieres(e){\n\n    //Définition des deux couches de frontières :\n    var coucheFrontieresDepartements = L.tileLayer.wms(environment.geoserverURL+'frontieres'+\"/wms?service=WMS\", {\n      layers: 'fontieres:departements',\n      format: 'image/png',\n      transparent: true,\n      attribution: '<a href=\"https://www.data.gouv.fr/fr/\">data.gouv.fr</a>',\n      id:'depFr'\n    }).setZIndex(1000);\n\n    var coucheFrontieresRegions = L.tileLayer.wms(environment.geoserverURL+'frontieres'+\"/wms?service=WMS\", {\n      layers: 'frontieres:regions',\n      format: 'image/png',\n      transparent: true,\n      attribution: '<a href=\"https://www.data.gouv.fr/fr/\">data.gouv.fr</a>',\n      id:'regFr'\n    }).setZIndex(1000);\n\n    //On les range dans un tableau\n    var coucheFrontieres=[\n      {   \"varlayer\" : coucheFrontieresDepartements,\n          \"id\" : \"depFr\" ,\n          \"label\" : \"Couche des frontières départementales\"\n      },\n      {   \"varlayer\" : coucheFrontieresRegions,\n          \"id\" : \"regFr\" ,\n          \"label\" : \"Couche des frontières régionales\"\n      }];\n\n    //Suivant si on coche et décoche une des deux chekbox, on ajoute ou supprime couche\n    if (e.checked) {\n      for (let i = 0; i < coucheFrontieres.length; i++) {\n\n        //On ajoute une couche :\n        if (coucheFrontieres[i][\"id\"] === e.source.id) { coucheFrontieres[i][\"varlayer\"].addTo(this.appComponent.getMap()); }\n      }\n    }\n\n    //On supprime une couche :\n    else { this.menuOutilsComponent.deleteLayer(this.appComponent.getMap(),e.source.id); }\n\n  }\n\n\n}\n","<mat-card id=\"exp-panel-frontiere\">\n\n    <mat-card-header>\n      <mat-card-title class=\"mat-panel-title\">Frontières administratives françaises</mat-card-title>\n    </mat-card-header>\n\n      <div id=\"conteneur-boutons\">\n        <mat-checkbox id='depFr' (change)='afficheFrontieres($event)' [checked]='checkedDep'>Départements</mat-checkbox><br>\n        <mat-checkbox id=\"regFr\" (change)='afficheFrontieres($event)' [checked]='checkedReg'>Régions</mat-checkbox>\n      </div>\n\n  </mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { MenuOutilsComponent } from \"../../menu-outils/menu-outils.component\";\nimport { AppComponent } from \"../../../app.component\";\n\nimport * as L from 'leaflet';\n\n@Component({\n  selector: 'app-sous-menu-mesure',\n  templateUrl: './sous-menu-mesure.component.html',\n  styleUrls: ['./sous-menu-mesure.component.css']\n})\nexport class SousMenuMesureComponent implements OnInit {\n\n\n  /**\n    * Appel des components parents si on en a besoin\n    * @param {component} appComponent\n    * @param {component} menuOutilsComponent\n   */\n  constructor(private appComponent: AppComponent,private menuOutilsComponent: MenuOutilsComponent) {}\n\n\n  /**\n    * Initie le sous-menu mesure à l'affichage\n   */\n  ngOnInit(): void {\n\n    //On récupère les éléments HTML dont on aura besoin\n    var carte=this.appComponent.getMap();\n    var carteContenant=document.getElementById('mymap');\n    var boutonsMenu=document.getElementById('conteneur-boutons-du-menu-outils');\n    var distDP=document.getElementById('distDernierPoint');\n    var distTot=document.getElementById('distTot');\n    var butt=document.getElementById('boutton');\n    var contPoints=document.getElementById('conteneur-points');\n\n    //Variable qui définie si on est en mode start ou reset : false -> start\n    var choice=false;\n\n    //Définition des variables\n    var listePoints=[];\n    var pointCourant;\n    var distance_km;\n    var distanceTotale=0;\n    var avantDernierPoint;\n    var dernierPoint;\n    var distance_m;\n    var i=1;\n\n    //On écoute le bouton pour commencer et pour reset\n    L.DomEvent.on(butt, 'click',toggle, this);\n\n\n    /**\n      * Suivant la nature du bouton, on commence ou rest une mesure\n     */\n    function toggle() {\n      choice=!choice;\n\n      //On est au start :\n      if (choice) {\n        \n        carte.doubleClickZoom.disable();\n\n        carte.doubleClickZoom.disable();\n\n        //On écoute la carte pour tracer les points et lignes\n        carte.on('click', onClick, this);\n\n        //On empeche l'accès aux boutons pendant la mesure et start devient reset\n        this.menuOutilsComponent.disableMenu(true);\n        carteContenant.style.cursor='crosshair';\n        butt.innerHTML='Réinitialiser la mesure';\n      }\n\n      //On est au reset :\n      else{\n\n        carte.doubleClickZoom.enable();\n\n        //On arrête d'écouter la carte et on supprime les mesures\n        carte.off('click', onClick, this);\n        deleteMeasures();\n\n        //On rétablit les boutons et reset devient start\n        this.menuOutilsComponent.disableMenu(false);\n        carteContenant.style.cursor='grab';\n        butt.innerHTML='Commencer la mesure';\n      }\n    }\n\n    /**\n      * Affiche les lignes, points\n      * @param {event} e\n     */\n    function onClick(e) {\n\n      //On rempli la liste des points à mesurer\n      listePoints.push( [e.latlng.lat,e.latlng.lng] );\n      let l=listePoints.length;\n\n      //On trace la polyligne et calcul la distance à partir de deux points dans la liste\n      if (l>1) {\n\n        calculDistances(listePoints);\n        L.polyline([[listePoints[l-1][0],listePoints[l-1][1]],[listePoints[l-2][0],listePoints[l-2][1]]],{fillOpacity :1,color:'#EC3816'}).addTo(carte);\n      }\n\n      //On trace les points aux extrémités des lignes et on affiche les coordonnées des points\n      L.circleMarker(e.latlng,{radius:4,color:'#EC3816',fillColor:'#EC3816',fillOpacity:1}).addTo(carte);\n      contPoints.style.border='solid';\n      contPoints.innerHTML+='<p style=\"margin-bottom: 0; height:14px;\"><strong>Point '+i+' :</strong> </p><p style=\"margin-bottom: 0;\">lat : '+listePoints[l-1][0].toFixed(5)+' ; '+' long : '+listePoints[l-1][1].toFixed(5)+'</p>';\n\n      i=i+1;\n    }\n\n\n    /**\n      * Supprime les mesures de la carte et du menu\n     */\n    function deleteMeasures(){\n\n      //On remet les variables à 0 pour une nouvelle mesure\n      i=1;\n      listePoints=[];\n      distanceTotale=0;\n\n      //On remet à null les contenants des informations précédentes\n      distDP.innerHTML=distTot.innerHTML=contPoints.innerHTML='';\n      contPoints.style.border=distDP.style.border=distTot.style.border='';\n\n      //On supprime les couches qui ont une valeur fillOpacity (seules les éléments de la mesure en ont)\n      carte.eachLayer(function(layer){\n        if (layer.options.fillOpacity) { carte.removeLayer(layer); }\n      });\n    }\n\n\n    /**\n      * Mesure et affiche les distances avec les points de la liste\n      * @param {array} listePoints\n     */\n    function calculDistances(listePoints) {\n\n        //On rend les contours des div des resultats visibles :\n        distDP.style.border='solid';\n        distTot.style.border='solid';\n\n        let l = listePoints.length;\n        avantDernierPoint =L.latLng(listePoints[l-2][0],listePoints[l-2][1]);\n        dernierPoint=L.latLng(listePoints[l-1][0],listePoints[l-1][1]);\n\n        //On calcule la distance au dernier points (m puis km)\n        distance_m=dernierPoint.distanceTo(avantDernierPoint);\n        distance_km=(distance_m/1000);\n\n        //Distance totale depuis le permier point :\n        distanceTotale=distanceTotale+distance_km;\n\n        //On afffiche ces résultats :\n        distDP.innerHTML='<span style=\"font-weight:bold;\">Au dernier point : </span>'+distance_km.toFixed(3)+' km';\n        distTot.innerHTML='<span style=\"font-weight:bold\">Distance totale : </span>' + distanceTotale.toFixed(3)+' km';\n      }\n\n  }\n\n}\n","<mat-card id='card-mesure'>\n\n  <mat-card-header>\n    <mat-card-title>Mesurer sur la carte</mat-card-title>\n  </mat-card-header>\n\n  <mat-card-content>\n    \n    <div id=\"boutonContainer\">\n      <button mat-raised-button type=\"button\" id=\"boutton\" name=\"button\">Commencer la mesure</button>\n    </div>\n\n    <div id=\"conteneur-points\"></div>\n\n      <p id=\"distDernierPoint\"></p>\n      <p id=\"distTot\"></p>\n\n  </mat-card-content>\n</mat-card>\n","declare const L: any;\nimport 'leaflet-wfst/dist/leaflet-wfst.min.js';\nimport { environment } from './../../environments/environment';\n\n\n/**\n  * Initialise le plugin pour afficher une couche wfs\n  * @param {string} nomWorkspace\n  * @param {string} nomCouche\n  * @param {string} couleur\n  * @param {string} or {L.rectangle} filtre\n */\nexport function initPlugin(nomWorkspace,nomCouche,couleur,filtre) {\n\n  //Options du plugin de récupération de wfst\n  var wfstPointOptions;\n\n  //on initialise le filtre d'afficage des donnnées\n  var filter = new L.Filter.Within('geom_gene',filtre, L.CRS.EPSG3857);\n  filter.toGml();\n\n  //On initialise d'abord les options du plugin\n  //Si on ne demande pas de filtre\n  if (filtre=='sans filtre') {\n\n     wfstPointOptions = {\n      crs: L.CRS.EPSG4326,\n      showExisting: true,\n      geometryField: 'geom',\n      url: 'http://localhost:8080/geoserver/wfs',\n      typeNS: nomWorkspace,\n      typeName: nomCouche,\n      maxFeatures: 1000,\n      opacity: 1,\n      style: (layer) => {\n        return {\n          color: couleur,\n          weight: 1 };\n      }\n\n    };\n\n  }\n\n  //Si on demande un filtre\n  else{\n     wfstPointOptions = {\n      crs: L.CRS.EPSG4326,\n      showExisting: true,\n      geometryField: 'geom',\n      url: 'http://localhost:8080/geoserver/wfs',\n      typeNS: nomWorkspace,\n      typeName: nomCouche,\n      opacity: 1,\n      //On prend le filtre en compte :\n      filter:filter,\n      style: (layer) => {\n        return {\n          color: couleur,\n          weight: 1 };\n      }\n\n    };\n\n  }\n\n  //On rtourne enuite les données wfst transformées en GeoJSON\n  return new L.WFST(\n\n    //On utilise les options :\n    wfstPointOptions,\n\n    new L.Format.GeoJSON({\n\n      crs: L.CRS.EPSG4326,\n\n      pointToLayer(geoJsonPoint, latlng) {\n        return new L.CircleMarker(latlng, {\n          radius: 10, });\n      }\n\n    })\n\n  );\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\nimport { environment } from './../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LayersServiceService {\n\n  private cswUrl: string= environment.geoserverCSW;\n  constructor(private _http: HttpClient) { }\n\n  getXml() {\n    const headers = new HttpHeaders().set('Content-Type', 'text/xml');\n    return this._http.get(this.cswUrl, { headers, responseType: 'text' });\n\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n\n  geoserverURL:\"http://localhost:8080/geoserver/\",\n  geoserverCSW:\"http://localhost:8080/geoserver/csw?service=CSW&version=2.0.2&request=GetRecords&typeNames=gmd:MD_Metadata&maxRecords=1000&resultType=results&elementSetName=full&outputSchema=http://www.isotc211.org/2005/gmd\",\n  geoserverWFS:\"http://localhost:8080/geoserver/wfs\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}